{"version":3,"sources":["webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-data-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-filter-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-config.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-details-modal/facet-details-modal.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet.config.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/csv/csv.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/filter/filter.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/keys/keys.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.module.ts","webpack:///dist/projects/ngx-mat-facet-search/src/public-api.ts","webpack:///dist/projects/ngx-mat-facet-search/src/ngx-mat-facet-search.ts","webpack:///projects/demo-application/src/app/app-routing.module.ts","webpack:///projects/demo-application/src/app/app.component.html","webpack:///projects/demo-application/src/app/app.component.ts","webpack:///projects/demo-application/src/app/app.module.ts","webpack:///projects/demo-application/src/app/demo.service.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.html","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.ts","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.html","webpack:///projects/demo-application/src/environments/environment.ts","webpack:///projects/demo-application/src/main.ts","webpack:///projects/demo-application/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":["FacetDataType","FacetFilterType","FacetConfig","allowDebugClick","identifier","cookieExpiresOn","MAX_TEXT_LENGTH","FacetDetailsModalComponent","dialogRef","data","clearButtonDisabled","typeAheadInputChanged","BehaviorSubject","isItemSelected","option","values","addOptionToSelected","facet","value","selected","type","Category","Typeahead","contains","push","CategorySingle","TypeaheadSingle","equal","isUpdateButtonDisabled","val","Date","DateRange","Text","Boolean","typeahead","subscribe","options","of","startsWith","endsWith","typeAheadInputs","length","pipe","filter","tap","undefined","debounceTime","debounce","txt","search","event","next","substring","trim","finished","onClose","close","onOk","typeaheadText","typeaheadValueChanged","MatDialogRef","Inject","MAT_DIALOG_DATA","ViewChildren","FACET_CONFIG","InjectionToken","providedIn","factory","NgxMatFacetSearchComponent","configuration","dialog","media","cookieService","placeholder","clearButtonText","clearButtonEnabled","dateFormat","tooltip","displayFilterIcon","facetWidth","facetHasBackdrop","confirmOnRemove","chipLabelsEnabled","selectedFacets","availableFacets","filteredFacets","searchUpdated","EventEmitter","identify","getFixedURL","updateAvailableFacets","loadFromCookies","source","Array","isArray","forEach","fromEvent","filterInput","nativeElement","distinctUntilChanged","map","filterText","f","name","toLowerCase","includes","readonly","elementRef","_elementRef","bound","getBoundingClientRect","facetSelected","top","height","left","isActive","selectedFacet","_getHostElement","parentElement","position","isUpdate","promptFacet","setTimeout","facetDetailsModal","open","width","hasBackdrop","backdropClass","panelClass","disableClose","closeOnNavigation","componentInstance","removeFacet","updatedFacet","addOrUpdateFacet","beforeClosed","index","emitSelectedEvent","updateCookies","confirm","labelText","sourceClone","a","clearCookies","text","active","stopPropagation","inputAutoComplete","openPanel","console","log","timeoutHandler","printIdentity","clearTimeout","set","JSON","stringify","cookieFacets","check","parse","get","window","location","pathname","toString","replace","MatDialog","MediaObserver","CookieService","Input","Output","ViewChild","MatAutocompleteTrigger","read","CSVPipe","objectKeyName","separator","element","join","FilterPipe","objectArray","fieldName","fieldValue","obj","KeysPipe","x","key","NgxMatFacetSearchModule","routes","path","component","PageOneComponent","PageTwoComponent","AppRoutingModule","RouterModule","AppComponent","router","demoService","showPageOne","showPageTwo","currentIdentifier","events","NavigationEnd","currentURL","url","AppModule","BrowserModule","BrowserAnimationsModule","MatCardModule","FlexModule","MatCheckboxModule","MatDividerModule","MatToolbarModule","MatButtonModule","FormsModule","DemoService","testEmptyFilterTypeahead","filtered","delay","facets","description","icon","count","facetFilters","updateIdentifier","facetSearch","filterUpdated","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports"],"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","file":"main-es5.js","sourcesContent":["export enum FacetDataType {\n  Text = 'Text',\n  Boolean = 'Boolean',\n  Category = 'Category',\n  CategorySingle = 'CategorySingle',\n  Date = 'Date',\n  DateRange = 'DateRange',\n  Typeahead = 'Typeahead',\n  TypeaheadSingle = 'TypeaheadSingle'\n}\n","export enum FacetFilterType {\n  contains = 'contains',\n  startsWith = 'startsWith',\n  endsWith = 'endsWith',\n  equal = 'equal',\n  and = 'and',\n  between = 'between',\n  greaterThan = 'greaterThan',\n  lessThan = 'lessThan',\n  greaterThanOrEqual = 'greaterThanOrEqual',\n  lessThanOrEqual = 'lessThanOrEqual'\n}\n","export class FacetConfig {\n  allowDebugClick = true;\n  identifier = null;\n  cookieExpiresOn = 1;\n}\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {debounceTime, filter, tap} from 'rxjs/operators';\nimport {Facet, FacetDataType, FacetFilterType, FacetOption} from '../../models';\nimport {BehaviorSubject, of} from 'rxjs';\nimport * as _ from 'lodash';\nimport {animate, style, transition, trigger} from '@angular/animations';\n\nconst MAX_TEXT_LENGTH = 60;\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-facet-details-modal',\n  templateUrl: './facet-details-modal.component.html',\n  styleUrls: ['./facet-details-modal.component.scss'],\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [\n        style({opacity: '0', height: 0}),\n        animate('.2s ease-out', style({opacity: '1', height: '*'})),\n      ]),\n    ]),\n  ],\n})\nexport class FacetDetailsModalComponent implements OnInit, AfterViewInit {\n\n  public isUpdate: boolean;\n  public removeFacet: (facet: Facet) => void;\n  public finished: (data: Facet) => void;\n  public typeaheadText: string;\n  public clearButtonDisabled = true;\n\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n\n  @ViewChildren('typeAheadInput') typeAheadInputs: QueryList<ElementRef>;\n\n  private typeAheadInputChanged = new BehaviorSubject<string>('');\n\n  constructor(\n    public dialogRef: MatDialogRef<FacetDetailsModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Facet) {\n\n    switch (this.data.type) {\n      case FacetDataType.Category:\n        break;\n\n      case FacetDataType.CategorySingle:\n        break;\n\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        // Go ahead and run query by default\n        if (this.data.typeahead && this.data.typeahead.function) {\n          this.data.typeahead.function('').subscribe(options => {\n            if (!!options) {\n              this.data.options = of(options);\n            } else {\n              this.data.options = of([]);\n            }\n          });\n        }\n        break;\n\n      case FacetDataType.Date:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.DateRange:\n        this.data.values = this.data.values || [{type: FacetFilterType.startsWith}, {type: FacetFilterType.endsWith}];\n        break;\n\n      case FacetDataType.Boolean:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.Text:\n        this.data.values = this.data.values || [{type: FacetFilterType.contains, value: ''}];\n        break;\n\n      default:\n        this.data.values = this.data.values || [{}];\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Setup debounce on the TypeAhead search\n   */\n  ngAfterViewInit() {\n    if (this.typeAheadInputs.length > 0) {\n      this.typeAheadInputChanged.pipe(\n        filter(val => !!val),\n        tap(() => {\n          this.data.options = undefined;\n        }),\n        debounceTime(this.data.typeahead.debounce || 300),\n      ).subscribe(txt => {\n        let search = txt;\n\n        if (!!!search) {\n          search = '';\n        }\n\n        this.data.typeahead.function(search).subscribe(options => {\n            if (!!options) {\n              this.data.options = of(options);\n            } else {\n              this.data.options = of([]);\n            }\n          }\n        );\n      });\n    }\n  }\n\n  typeaheadValueChanged(event) {\n    if (!!event) {\n      this.typeAheadInputChanged.next(event);\n    } else {\n      this.typeAheadInputChanged.next(' ');\n    }\n\n    this.clearButtonDisabled = (!!!event || event.length === 0);\n  }\n\n  truncateText(txt: string): string {\n    if (txt && txt.length) {\n      return txt.length > MAX_TEXT_LENGTH ?\n        `${txt.substring(0, MAX_TEXT_LENGTH).trim()}...` :\n        txt;\n\n    } else {\n      return txt;\n    }\n\n  }\n\n  onOk(): void {\n    this.finished(this.data);\n  }\n\n  onCancel(): void {\n    this.onClose();\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  validateAndSubmit() {\n    if (!this.isUpdateButtonDisabled()) {\n      this.onOk();\n    }\n  }\n\n  isItemSelected = (option: FacetOption): boolean => {\n    return _.some(this.data.values, option);\n  };\n\n  addOptionToSelected = (facet: Facet, option: FacetOption): void => {\n\n    if (_.some(facet.values, {value: option.value})) {\n      _.remove(facet.values, {value: option.value});\n    } else {\n      option.selected = true;\n      switch (facet.type) {\n        case FacetDataType.Category:\n        case FacetDataType.Typeahead:\n          if (_.isNil(facet.values)) {\n            facet.values = [];\n          }\n          option.type = FacetFilterType.contains;\n          facet.values.push(option);\n          break;\n        case FacetDataType.CategorySingle:\n        case FacetDataType.TypeaheadSingle:\n          option.type = FacetFilterType.equal;\n          facet.values = [option];\n          break;\n      }\n    }\n  };\n\n  isUpdateButtonDisabled = () => {\n    switch (this.data.type) {\n      case FacetDataType.Category:\n      case FacetDataType.CategorySingle:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.Date:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.DateRange:\n        return !(this.data.values[0].value) || !(this.data.values[1].value);\n\n      case FacetDataType.Text:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.Boolean:\n        return !(this.data.values[0].value);\n\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        return !_.some(this.data.values, (val) => val.value);\n    }\n  };\n\n  emptyFunction() {\n\n  }\n\n  clearInput() {\n    this.typeaheadText = '';\n    this.typeaheadValueChanged('');\n  }\n}\n","import {InjectionToken} from '@angular/core';\nimport {FacetConfig} from './models';\n\nexport const FACET_CONFIG = new InjectionToken<FacetConfig>('Facet Configuration', {\n  providedIn: 'root',\n  factory: () => new FacetConfig()\n});\n","import {AfterViewInit, Component, ElementRef, EventEmitter, Inject, InjectionToken, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {DialogPosition, MatDialog} from '@angular/material/dialog';\nimport {MatAutocompleteSelectedEvent, MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {Facet, FacetDataType, FacetFilterType, FacetConfig} from './models';\nimport {MatChipSelectionChange} from '@angular/material/chips';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MediaObserver} from '@angular/flex-layout';\nimport * as _ from 'lodash';\nimport {fromEvent} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {CookieService} from 'ngx-cookie-service';\nimport {FACET_CONFIG} from './ngx-mat-facet.config';\n\n// @dynamic\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-facet-search',\n  templateUrl: 'ngx-mat-facet-search.component.html',\n  styleUrls: ['./ngx-mat-facet-search.component.css'],\n})\nexport class NgxMatFacetSearchComponent implements OnInit, AfterViewInit {\n\n  constructor(@Inject(FACET_CONFIG) configuration: FacetConfig,\n              public dialog: MatDialog,\n              public media: MediaObserver,\n              private cookieService: CookieService) {\n\n    this.searchUpdated = new EventEmitter<Facet[]>();\n\n    this.identifier = configuration.identifier;\n    this.allowDebugClick = configuration.allowDebugClick;\n    this.cookieExpiresOn = configuration.cookieExpiresOn;\n  }\n\n  @Input() source: Facet[];\n  @Input() placeholder = 'Filter Table...';\n  @Input() clearButtonText = 'Clear Filters';\n  @Input() clearButtonEnabled = true;\n  @Input() dateFormat = 'M/d/yyyy';\n\n  @Input() tooltip: string | null = null;\n  @Input() displayFilterIcon = true;\n  @Input() facetWidth = '400px';\n  @Input() facetHasBackdrop = true;\n  @Input() confirmOnRemove = true;\n  @Input() chipLabelsEnabled = true;\n  @Input() identifier = null;\n  @Output() searchUpdated: EventEmitter<Facet[]>;\n\n  @ViewChild('filterInput') filterInput: ElementRef;\n  @ViewChild(MatAutocompleteTrigger, {read: MatAutocompleteTrigger}) inputAutoComplete: MatAutocompleteTrigger;\n\n  public selectedFacet: Facet;\n  public selectedFacets: Facet[] = [];\n  public availableFacets: Facet[] = [];\n  public filteredFacets: Facet[] = [];\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n  public allowDebugClick = false;\n  public cookieExpiresOn = 1;\n\n  private timeoutHandler: any;\n\n  private static getFixedURL(): string {\n    return window.location.pathname.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/\\//g, '-')\n      .replace(/^-/g, '');\n  }\n\n  ngOnInit() {\n    if (!this.identifier) {\n      this.identify(NgxMatFacetSearchComponent.getFixedURL());\n    }\n\n    this.updateAvailableFacets();\n    this.selectedFacets = this.loadFromCookies();\n    this.source.filter(facet => facet && facet.values && Array.isArray(facet.values))\n      .forEach(facet => this.selectedFacets.push(facet));\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.filterInput.nativeElement, 'keyup')\n      .pipe(\n        filter(Boolean),\n        debounceTime(150),\n        distinctUntilChanged(),\n        map(() => this.filterInput.nativeElement.value)\n      ).subscribe((filterText) => {\n      if (!!filterText && filterText.length > 0) {\n        this.filteredFacets = this.availableFacets.filter(f => f.name.toLowerCase().includes(filterText.toLowerCase()));\n      } else {\n        this.filteredFacets = this.availableFacets;\n      }\n    });\n  }\n\n  chipSelected(event: MatChipSelectionChange, facet: Facet): void {\n    if (event.selected && !facet.readonly) {\n      const elementRef = event.source._elementRef.nativeElement;\n      const bound = elementRef.getBoundingClientRect();\n      this.facetSelected(facet, {\n        top: bound.top + bound.height + 'px',\n        left: (!this.media.isActive('xs') ? bound.left + 'px' : undefined)\n\n      }, true);\n    }\n  }\n\n  autoCompleteSelected(event: MatAutocompleteSelectedEvent): void {\n    const selectedFacet: Facet = event.option.value;\n    const elementRef = event.option._getHostElement().parentElement.getBoundingClientRect();\n    const top = elementRef.top;\n    const left = elementRef.left;\n\n    this.facetSelected(selectedFacet, {\n      top: top + 'px',\n      left: (!this.media.isActive('xs') ? left + 'px' : undefined)\n    }, false);\n\n  }\n\n  facetSelected(facet: Facet, position: DialogPosition, isUpdate: boolean): void {\n    this.promptFacet(_.cloneDeep(facet), position, isUpdate);\n  }\n\n  promptFacet(facet: Facet, position: DialogPosition, isUpdate: boolean): void {\n    this.filteredFacets = this.availableFacets;\n\n    setTimeout(() => {\n\n      const facetDetailsModal = this.dialog.open(FacetDetailsModalComponent, {\n        width: this.facetWidth,\n        hasBackdrop: this.facetHasBackdrop,\n        position,\n        backdropClass: 'transparentBackdrop',\n        panelClass: 'mat-facet-search-dialog',\n        data: facet,\n        disableClose: true,\n        closeOnNavigation: false\n      });\n      facetDetailsModal.componentInstance.removeFacet = (f: Facet) => {\n        if (this.removeFacet(f)) {\n          facetDetailsModal.close();\n        }\n      };\n      facetDetailsModal.componentInstance.isUpdate = isUpdate;\n      facetDetailsModal.componentInstance.finished = (updatedFacet: Facet) => {\n        this.addOrUpdateFacet(updatedFacet);\n        facetDetailsModal.close();\n      };\n      facetDetailsModal.beforeClosed().subscribe(() => {\n        this.selectedFacet = undefined;\n      });\n\n    }, 1);\n  }\n\n  addOrUpdateFacet(facet: Facet): void {\n    const index = _.findIndex(this.selectedFacets, {name: facet.name});\n    if (index > -1) {\n      this.selectedFacets[index] = facet;\n    } else {\n      this.selectedFacets.push(facet);\n    }\n    this.emitSelectedEvent();\n    this.updateCookies();\n  }\n\n  removeFacet(facet: Facet): boolean {\n    if (!this.confirmOnRemove || (this.confirmOnRemove && confirm('Do you really want to remove \"' + facet.labelText + '\" filter?'))) {\n      _.remove(this.selectedFacets, {name: facet.name});\n      this.emitSelectedEvent();\n      this.updateCookies();\n      return true;\n    }\n    return false;\n  }\n\n  updateAvailableFacets(): void {\n    const sourceClone = _.cloneDeep(this.source);\n    _.remove(sourceClone, (a) => {\n      return _.some(this.selectedFacets, {name: a.name});\n    });\n    this.availableFacets = sourceClone;\n    this.filteredFacets = this.availableFacets;\n  }\n\n  reset(): void {\n    this.selectedFacets = this.source.filter(facet => facet.readonly === true);\n    this.emitSelectedEvent();\n    this.clearCookies();\n  }\n\n  emitSelectedEvent(): void {\n    this.updateAvailableFacets();\n    this.searchUpdated.next(this.selectedFacets.map(facet => ({\n        name: facet.name,\n        labelText: facet.labelText,\n        type: facet.type,\n        values: facet.values.map(val => ({\n            value: val.value,\n            labelText: val.text,\n            type: val.type,\n            active: true\n          })\n        )\n      })\n      )\n    );\n  }\n\n  displayFn(...args: any): string | undefined {\n    return undefined;\n  }\n\n  focus(event) {\n    event.stopPropagation();\n    this.inputAutoComplete.openPanel();\n  }\n\n  identify(identifier: string) {\n    if (identifier.length === 0 || identifier === '-') {\n      this.identifier = 'default-facet';\n    } else {\n      this.identifier = `${identifier}-facet`;\n    }\n  }\n\n  clearCookies() {\n    if (!this.identifier) {\n      return;\n    }\n\n    this.cookieService.delete(this.identifier);\n  }\n\n  printIdentity() {\n    console.log(this.identifier);\n  }\n\n  // Debug\n  clickStarted() {\n    if (!this.allowDebugClick) {\n      return;\n    }\n\n    this.timeoutHandler = setTimeout(() => {\n      this.printIdentity();\n      this.timeoutHandler = null;\n    }, 1000);\n  }\n\n  clickEnded() {\n    if (this.timeoutHandler) {\n      clearTimeout(this.timeoutHandler);\n      this.timeoutHandler = null;\n    }\n  }\n\n  private updateCookies() {\n    if (!this.identifier) {\n      return;\n    }\n\n    if (this.selectedFacets.length === 0) {\n      this.clearCookies();\n      return;\n    }\n\n    this.cookieService.set(this.identifier, JSON.stringify(this.selectedFacets), this.cookieExpiresOn);\n  }\n\n  private loadFromCookies(): Facet[] {\n    let cookieFacets = [];\n\n    if (!!this.identifier && this.cookieService.check(this.identifier)) {\n      cookieFacets = JSON.parse(this.cookieService.get(this.identifier));\n    }\n\n    if (cookieFacets.length > 0) {\n      setTimeout(() => {\n        this.emitSelectedEvent();\n      }, 500);\n    }\n\n    return cookieFacets;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'csv',\n  pure: false\n})\nexport class CSVPipe implements PipeTransform {\n\n  transform(value: Array<object>, objectKeyName: string, separator: string): any {\n    return _.map(value,  (element) => {\n      return objectKeyName ? element[objectKeyName] : element;\n    }).join(separator || ',');\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n  transform(objectArray: Array<object>, fieldName: string, fieldValue: any): any {\n    return _.filter(objectArray, (obj) => {\n      return obj[fieldName] === fieldValue;\n    });\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'keys',\n  pure: false\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    return _.map(_.keys(value), (x) => {\n      return {\n        key: x,\n        value: x\n      };\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxMatFacetSearchComponent} from './ngx-mat-facet-search.component';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CommonModule} from '@angular/common';\nimport {MatListModule} from '@angular/material/list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {CSVPipe, FilterPipe, KeysPipe} from './pipes';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CookieService} from 'ngx-cookie-service';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n  ],\n  declarations: [\n    CSVPipe,\n    FilterPipe,\n    KeysPipe,\n    NgxMatFacetSearchComponent,\n    FacetDetailsModalComponent,\n  ],\n  exports: [NgxMatFacetSearchComponent],\n  entryComponents: [FacetDetailsModalComponent],\n  providers: [CookieService]\n})\nexport class NgxMatFacetSearchModule {\n}\n","/*\n * Public API Surface of ngx-mat-facet-search\n */\n\nexport * from './lib/ngx-mat-facet-search.component';\nexport * from './lib/ngx-mat-facet-search.module';\nexport * from './lib/models';\nexport * from './lib/ngx-mat-facet.config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FacetDetailsModalComponent as ɵe} from './lib/modals/facet-details-modal/facet-details-modal.component';\nexport {Facet as ɵf,FacetConfig as ɵa} from './lib/models';\nexport {CSVPipe as ɵb,FilterPipe as ɵc,KeysPipe as ɵd} from './lib/pipes';","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageOneComponent\n  },\n  {\n    path: 'two',\n    component: PageTwoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","<mat-toolbar>\n  <span>Angular Material Facet Search: v0.3.3.</span>\n  <span class=\"spacer\"></span>\n  <span>Facet ID {{currentIdentifier|async}}</span>\n  <span class=\"spacer\"></span>\n  <button mat-button routerLink=\"\" *ngIf=\"showPageOne\">\n    Page One\n  </button>\n  <button mat-button routerLink=\"/two\" *ngIf=\"showPageTwo\">\n    Page Two\n  </button>\n</mat-toolbar>\n\n<div fxLayout=\"column\">\n  <router-outlet></router-outlet>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {DemoService} from './demo.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  showPageOne = true;\n  showPageTwo = true;\n\n  currentIdentifier: Observable<string>;\n\n  constructor(private router: Router, private demoService: DemoService) {\n    this.currentIdentifier = demoService.currentIdentifier;\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const currentURL = event.url;\n        if (currentURL.includes('two')) {\n          this.showPageTwo = false;\n          this.showPageOne = true;\n          console.log('Page Two');\n        } else {\n          this.showPageOne = false;\n          this.showPageTwo = true;\n          console.log('Page One');\n        }\n      }\n    });\n  }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMatFacetSearchModule} from 'ngx-mat-facet-search';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageOneComponent,\n    PageTwoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxMatFacetSearchModule,\n    MatCardModule,\n    FlexModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DemoService {\n\n  currentIdentifier: BehaviorSubject<string> = new BehaviorSubject<string>('default-facet');\n\n  updateIdentifier(identifier: string) {\n    this.currentIdentifier.next(identifier);\n  }\n}\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {of} from 'rxjs';\nimport {Facet, FacetDataType, FacetOption, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\nimport {delay, map, tap} from 'rxjs/operators';\nimport {DemoService} from '../../demo.service';\n\n@Component({\n  selector: 'app-page-one',\n  templateUrl: './page-one.component.html',\n  styleUrls: ['./page-one.component.scss']\n})\nexport class PageOneComponent implements AfterViewInit {\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  public selectedFacets: Facet[] = [];\n\n  // Settings\n  public chipLabelsEnabled = true;\n  public clearButtonEnabled = true;\n  public confirmOnRemove = true;\n\n  public testEmptyFilterTypeahead = (text: string) => {\n    return of([\n      {value: '-a', text: ' A'},\n      {value: '-b', text: ' B'},\n      {value: '-c', text: ' C'}\n    ] as FacetOption[]).pipe(\n      map(values => {\n        const filtered = values.filter(value => value.text.includes(text));\n\n        if (filtered.length === 0) {\n          return null;\n        }\n\n        return filtered;\n      }),\n      delay(300),\n      tap(values => console.log('Test empty:', values))\n    );\n  };\n\n  facets: Array<Facet> = [\n    {\n      name: 'userName',\n      labelText: 'User Name',\n      type: FacetDataType.Text,\n      description: 'Please enter your user name (simple text input example)',\n      icon: 'person_outline'\n    }, {\n      name: 'birthday',\n      labelText: 'Birthday',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'eventDays',\n      labelText: 'Event Days',\n      icon: 'event_available',\n      description: 'Please select start and end dates (date range select example)',\n      type: FacetDataType.DateRange,\n    },\n    {\n      name: 'isParticipant',\n      labelText: 'Is a Participant?',\n      icon: 'live_help',\n      description: 'This is a test field, you can test boolean data type.',\n      type: FacetDataType.Boolean,\n    },\n    {\n      name: 'state',\n      labelText: 'State',\n      description: 'Please select something (single select, http example)',\n      type: FacetDataType.CategorySingle,\n      icon: 'folder_open',\n      /* mock http service call  */\n      options: of([\n        {value: 'open', text: 'Open', count: 49},\n        {value: 'closed', text: 'Closed', count: 23}\n      ]).pipe(delay(700))\n    },\n    {\n      name: 'license',\n      labelText: 'License(s)',\n      description: 'Please select your licenses (multi select, http example)',\n      type: FacetDataType.Category,\n      icon: 'drive_eta',\n      /* mock http service call  */\n      options: of([\n        {value: 'a', text: 'Class A'},\n        {value: 'b', text: 'Class B'},\n        {value: 'c', text: 'Class C'}\n      ]).pipe(delay(1200))\n    },\n    {\n      name: 'city',\n      labelText: 'Cities',\n      description: 'Please select from cities.',\n      type: FacetDataType.Typeahead,\n      icon: 'location_city',\n      typeahead: {\n        function: (txt) => {\n          return of([\n            {value: txt + '-a', text: txt + ' A'},\n            {value: txt + '-b', text: txt + ' B'},\n            {value: txt + '-c', text: txt + ' C'}\n          ]).pipe(delay(1200));\n        },\n      }\n    },\n    {\n      name: 'empty',\n      labelText: 'Empty Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'clear',\n      typeahead: {\n        function: this.testEmptyFilterTypeahead,\n        placeholder: 'Empty'\n      }\n    }\n  ];\n\n  constructor(private demoService: DemoService) {\n  }\n\n  // You can use an event method like this to trigger your filtering logic.\n  filterUpdated(facetFilters: Facet[]): void {\n    this.selectedFacets = facetFilters;\n    console.log('filter', facetFilters);\n  }\n\n  ngAfterViewInit() {\n    this.demoService.updateIdentifier(this.facetSearch.identifier);\n  }\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search [source]=\"facets\" (searchUpdated)=\"filterUpdated($event)\" [chipLabelsEnabled]=\"chipLabelsEnabled\"\n                          [confirmOnRemove]=\"confirmOnRemove\" [clearButtonEnabled]=\"clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\">\n\n  <mat-card fxFlex=\"none\">\n    <mat-card-title>Settings</mat-card-title>\n    <mat-card-content fxLayout=\"column\">\n      <mat-checkbox [(ngModel)]=\"chipLabelsEnabled\">Chip labels</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"clearButtonEnabled\">\"Clear\" Button</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"confirmOnRemove\">Confirmation on remove</mat-checkbox>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card fxFlex>\n    <mat-card-title>Output</mat-card-title>\n    <mat-card-content>\n      <pre style=\"font-family:monospace; font-size:small\">{{selectedFacets | json }}</pre>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {Facet, FacetDataType, FacetOption, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\nimport {of} from 'rxjs';\nimport {delay, map, tap} from 'rxjs/operators';\nimport {DemoService} from '../../demo.service';\n\n@Component({\n  selector: 'app-page-two',\n  templateUrl: './page-two.component.html',\n  styleUrls: ['./page-two.component.scss']\n})\nexport class PageTwoComponent implements AfterViewInit {\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  public selectedFacets: Facet[] = [];\n\n  // Settings\n  public chipLabelsEnabled = true;\n  public clearButtonEnabled = true;\n  public confirmOnRemove = true;\n\n  public testEmptyFilterTypeahead = (text: string) => {\n    return of([\n      {value: '-a', text: ' A'},\n      {value: '-b', text: ' B'},\n      {value: '-c', text: ' C'}\n    ] as FacetOption[]).pipe(\n      map(values => {\n        const filtered = values.filter(value => value.text.includes(text));\n\n        if (filtered.length === 0) {\n          return null;\n        }\n\n        return filtered;\n      }),\n      delay(300),\n      tap(values => console.log('Test empty:', values))\n    );\n  };\n\n  facets: Array<Facet> = [\n    {\n      name: 'userName',\n      labelText: 'User Name',\n      type: FacetDataType.Text,\n      description: 'Please enter your user name (simple text input example)',\n      icon: 'person_outline'\n    }, {\n      name: 'birthday',\n      labelText: 'Birthday',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'eventDays',\n      labelText: 'Event Days',\n      icon: 'event_available',\n      description: 'Please select start and end dates (date range select example)',\n      type: FacetDataType.DateRange,\n    },\n    {\n      name: 'isParticipant',\n      labelText: 'Is a Participant?',\n      icon: 'live_help',\n      description: 'This is a test field, you can test boolean data type.',\n      type: FacetDataType.Boolean,\n    },\n    {\n      name: 'state',\n      labelText: 'State',\n      description: 'Please select something (single select, http example)',\n      type: FacetDataType.CategorySingle,\n      icon: 'folder_open',\n      /* mock http service call  */\n      options: of([\n        {value: 'open', text: 'Open', count: 49},\n        {value: 'closed', text: 'Closed', count: 23}\n      ]).pipe(delay(700))\n    },\n    {\n      name: 'license',\n      labelText: 'License(s)',\n      description: 'Please select your licenses (multi select, http example)',\n      type: FacetDataType.Category,\n      icon: 'drive_eta',\n      /* mock http service call  */\n      options: of([\n        {value: 'a', text: 'Class A'},\n        {value: 'b', text: 'Class B'},\n        {value: 'c', text: 'Class C'}\n      ]).pipe(delay(1200))\n    },\n    {\n      name: 'city',\n      labelText: 'Cities',\n      description: 'Please select from cities.',\n      type: FacetDataType.Typeahead,\n      icon: 'location_city',\n      typeahead: {\n        function: (txt) => {\n          return of([\n            {value: txt + '-a', text: txt + ' A'},\n            {value: txt + '-b', text: txt + ' B'},\n            {value: txt + '-c', text: txt + ' C'}\n          ]).pipe(delay(1200));\n        },\n      }\n    },\n    {\n      name: 'empty',\n      labelText: 'Empty Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'clear',\n      typeahead: {\n        function: this.testEmptyFilterTypeahead,\n        placeholder: 'Empty'\n      }\n    }\n  ];\n\n  constructor(private demoService: DemoService) {\n  }\n\n  // You can use an event method like this to trigger your filtering logic.\n  filterUpdated(facetFilters: Facet[]): void {\n    this.selectedFacets = facetFilters;\n    console.log('filter', facetFilters);\n  }\n\n  ngAfterViewInit() {\n    this.demoService.updateIdentifier(this.facetSearch.identifier);\n  }\n\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search [source]=\"facets\" (searchUpdated)=\"filterUpdated($event)\" [chipLabelsEnabled]=\"chipLabelsEnabled\"\n                          [confirmOnRemove]=\"confirmOnRemove\" [clearButtonEnabled]=\"clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\">\n\n  <mat-card fxFlex=\"none\">\n    <mat-card-title>Settings</mat-card-title>\n    <mat-card-content fxLayout=\"column\">\n      <mat-checkbox [(ngModel)]=\"chipLabelsEnabled\">Chip labels</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"clearButtonEnabled\">\"Clear\" Button</mat-checkbox>\n      <mat-checkbox [(ngModel)]=\"confirmOnRemove\">Confirmation on remove</mat-checkbox>\n    </mat-card-content>\n  </mat-card>\n\n  <mat-card fxFlex>\n    <mat-card-title>Output</mat-card-title>\n    <mat-card-content>\n      <pre style=\"font-family:monospace; font-size:small\">{{selectedFacets | json }}</pre>\n    </mat-card-content>\n  </mat-card>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1854;\nmodule.exports = webpackEmptyAsyncContext;"]}