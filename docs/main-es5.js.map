{"version":3,"sources":["webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-data-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-filter-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-config.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-details-modal/facet-details-modal.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet.config.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/misc/parent.helper.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/csv/csv.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/filter/filter.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/keys/keys.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.module.ts","webpack:///dist/projects/ngx-mat-facet-search/src/public-api.ts","webpack:///dist/projects/ngx-mat-facet-search/src/ngx-mat-facet-search.ts","webpack:///projects/demo-application/src/app/app-routing.module.ts","webpack:///projects/demo-application/src/app/app.component.ts","webpack:///projects/demo-application/src/app/app.component.html","webpack:///projects/demo-application/src/app/app.module.ts","webpack:///projects/demo-application/src/app/common.helpers.ts","webpack:///projects/demo-application/src/app/components/output/output.component.ts","webpack:///projects/demo-application/src/app/components/output/output.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.html","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.ts","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.html","webpack:///projects/demo-application/src/environments/environment.ts","webpack:///projects/demo-application/src/main.ts","webpack:///projects/demo-application/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":["FacetDataType","FacetFilterType","FacetIdentifierStrategy","FacetConfig","configuration","allowDebugClick","cookieExpiresOn","identifierStrategy","ParentID","loggingCallback","hasOwnProperty","MAX_TEXT_LENGTH","FacetDetailsModalComponent","dialogRef","data","clearButtonDisabled","typeAheadInputChanged","BehaviorSubject","isItemSelected","option","values","addOptionToSelected","facet","value","selected","type","Category","Typeahead","contains","push","CategorySingle","TypeaheadSingle","equal","isUpdateButtonDisabled","val","Date","DateRange","Text","Boolean","typeahead","subscribe","options","of","startsWith","endsWith","typeAheadInputs","length","pipe","filter","tap","undefined","debounceTime","debounce","txt","search","event","next","substring","trim","finished","onClose","close","onOk","typeaheadText","typeaheadValueChanged","MatDialogRef","Inject","MAT_DIALOG_DATA","ViewChildren","FACET_CONFIG","InjectionToken","providedIn","factory","VCRefInjector","injector","raw","parent","tagName","toLowerCase","_lView","NgxMatFacetSearchComponent","dialog","media","cookieService","vcRef","placeholder","clearButtonText","clearButtonEnabled","dateFormat","tooltip","displayFilterIcon","facetWidth","facetHasBackdrop","confirmOnRemove","chipLabelsEnabled","identifier","selectedFacets","availableFacets","filteredFacets","injectorRef","searchUpdated","EventEmitter","reconfigure","facets","generateIdentity","updateAvailableFacets","loadFromCookies","source","Array","isArray","forEach","fromEvent","filterInput","nativeElement","distinctUntilChanged","map","filterText","f","name","includes","readonly","elementRef","_elementRef","bound","getBoundingClientRect","facetSelected","top","height","left","isActive","selectedFacet","_getHostElement","parentElement","position","isUpdate","promptFacet","setTimeout","facetDetailsModal","open","width","hasBackdrop","backdropClass","panelClass","disableClose","closeOnNavigation","componentInstance","removeFacet","updatedFacet","addOrUpdateFacet","beforeClosed","index","emitSelectedEvent","updateCookies","confirm","labelText","sourceClone","a","clearCookies","text","active","stopPropagation","inputAutoComplete","openPanel","console","log","timeoutHandler","printIdentity","clearTimeout","identity","previousIdentity","manual","WindowURL","getFixedURL","parentIdentifier","Random","uuidv4","identify","set","JSON","stringify","cookieFacets","check","parse","get","window","location","pathname","toString","replace","MatDialog","MediaObserver","CookieService","ViewContainerRef","Input","Output","ViewChild","MatAutocompleteTrigger","read","CSVPipe","objectKeyName","separator","element","join","FilterPipe","objectArray","fieldName","fieldValue","obj","KeysPipe","x","key","NgxMatFacetSearchModule","routes","path","component","PageOneComponent","PageTwoComponent","AppRoutingModule","RouterModule","AppComponent","router","showPageOne","showPageTwo","version","repo","events","NavigationEnd","currentURL","url","provide","useFactory","AppModule","BrowserModule","BrowserAnimationsModule","MatCardModule","FlexModule","MatCheckboxModule","MatDividerModule","MatToolbarModule","MatButtonModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatTooltipModule","FormsModule","SettingsComponent","OutputComponent","testEmptyFilterTypeahead","filtered","delay","facetFilters","manualIdentifierUpdated","strategyUpdated","currentIdentifier","allStrategies","showManualInput","manualIdentifier","Object","keys","v","currentStrategy","strategy","description","icon","count","newStrategy","facetSearch","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","id","module","exports"],"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","file":"main-es5.js","sourcesContent":["export enum FacetDataType {\n  Text = 'Text',\n  Boolean = 'Boolean',\n  Category = 'Category',\n  CategorySingle = 'CategorySingle',\n  Date = 'Date',\n  DateRange = 'DateRange',\n  Typeahead = 'Typeahead',\n  TypeaheadSingle = 'TypeaheadSingle'\n}\n","export enum FacetFilterType {\n  contains = 'contains',\n  startsWith = 'startsWith',\n  endsWith = 'endsWith',\n  equal = 'equal',\n  and = 'and',\n  between = 'between',\n  greaterThan = 'greaterThan',\n  lessThan = 'lessThan',\n  greaterThanOrEqual = 'greaterThanOrEqual',\n  lessThanOrEqual = 'lessThanOrEqual'\n}\n","export enum FacetIdentifierStrategy {\n  WindowURL = 'windowURL',\n  ParentID = 'parentID',\n  Random = 'random',\n  Manual = 'manual'\n}\n\nexport class FacetConfig {\n  allowDebugClick = true;\n  cookieExpiresOn = 1;\n  identifierStrategy: FacetIdentifierStrategy = FacetIdentifierStrategy.ParentID;\n  loggingCallback: (...args) => void = () => {}\n\n  constructor(configuration?: Partial<FacetConfig>) {\n    if (configuration) {\n      if (configuration.hasOwnProperty('allowDebugClick')) {\n        this.allowDebugClick = configuration.allowDebugClick;\n      }\n\n      if (configuration.hasOwnProperty('cookieExpiresOn')) {\n        this.cookieExpiresOn = configuration.cookieExpiresOn;\n      }\n\n      if (configuration.hasOwnProperty('identifierStrategy')) {\n        this.identifierStrategy = configuration.identifierStrategy;\n      }\n\n      if (configuration.hasOwnProperty('loggingCallback')) {\n        this.loggingCallback = configuration.loggingCallback;\n      }\n    }\n  }\n}\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {debounceTime, filter, tap} from 'rxjs/operators';\nimport {Facet, FacetDataType, FacetFilterType, FacetOption} from '../../models';\nimport {BehaviorSubject, of} from 'rxjs';\nimport * as _ from 'lodash';\nimport {animate, style, transition, trigger} from '@angular/animations';\n\nconst MAX_TEXT_LENGTH = 60;\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-facet-details-modal',\n  templateUrl: './facet-details-modal.component.html',\n  styleUrls: ['./facet-details-modal.component.scss'],\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [\n        style({opacity: '0', height: 0}),\n        animate('.2s ease-out', style({opacity: '1', height: '*'})),\n      ]),\n    ]),\n  ],\n})\nexport class FacetDetailsModalComponent implements OnInit, AfterViewInit {\n\n  public isUpdate: boolean;\n  public removeFacet: (facet: Facet) => void;\n  public finished: (data: Facet) => void;\n  public typeaheadText: string;\n  public clearButtonDisabled = true;\n\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n\n  @ViewChildren('typeAheadInput') typeAheadInputs: QueryList<ElementRef>;\n\n  private typeAheadInputChanged = new BehaviorSubject<string>('');\n\n  constructor(\n    public dialogRef: MatDialogRef<FacetDetailsModalComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: Facet) {\n\n    switch (this.data.type) {\n      case FacetDataType.Category:\n        break;\n\n      case FacetDataType.CategorySingle:\n        break;\n\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        // Go ahead and run query by default\n        if (this.data.typeahead && this.data.typeahead.function) {\n          this.data.typeahead.function('').subscribe(options => {\n            if (!!options) {\n              this.data.options = of(options);\n            } else {\n              this.data.options = of([]);\n            }\n          });\n        }\n        break;\n\n      case FacetDataType.Date:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.DateRange:\n        this.data.values = this.data.values || [{type: FacetFilterType.startsWith}, {type: FacetFilterType.endsWith}];\n        break;\n\n      case FacetDataType.Boolean:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.Text:\n        this.data.values = this.data.values || [{type: FacetFilterType.contains, value: ''}];\n        break;\n\n      default:\n        this.data.values = this.data.values || [{}];\n    }\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n   * Setup debounce on the TypeAhead search\n   */\n  ngAfterViewInit() {\n    if (this.typeAheadInputs.length > 0) {\n      this.typeAheadInputChanged.pipe(\n        filter(val => !!val),\n        tap(() => {\n          this.data.options = undefined;\n        }),\n        debounceTime(this.data.typeahead.debounce || 300),\n      ).subscribe(txt => {\n        let search = txt;\n\n        if (!!!search) {\n          search = '';\n        }\n\n        this.data.typeahead.function(search).subscribe(options => {\n            if (!!options) {\n              this.data.options = of(options);\n            } else {\n              this.data.options = of([]);\n            }\n          }\n        );\n      });\n    }\n  }\n\n  typeaheadValueChanged(event) {\n    if (!!event) {\n      this.typeAheadInputChanged.next(event);\n    } else {\n      this.typeAheadInputChanged.next(' ');\n    }\n\n    this.clearButtonDisabled = (!!!event || event.length === 0);\n  }\n\n  truncateText(txt: string): string {\n    if (txt && txt.length) {\n      return txt.length > MAX_TEXT_LENGTH ?\n        `${txt.substring(0, MAX_TEXT_LENGTH).trim()}...` :\n        txt;\n\n    } else {\n      return txt;\n    }\n\n  }\n\n  onOk(): void {\n    this.finished(this.data);\n  }\n\n  onCancel(): void {\n    this.onClose();\n  }\n\n  onClose(): void {\n    this.dialogRef.close();\n  }\n\n  validateAndSubmit() {\n    if (!this.isUpdateButtonDisabled()) {\n      this.onOk();\n    }\n  }\n\n  isItemSelected = (option: FacetOption): boolean => {\n    return _.some(this.data.values, option);\n  };\n\n  addOptionToSelected = (facet: Facet, option: FacetOption): void => {\n\n    if (_.some(facet.values, {value: option.value})) {\n      _.remove(facet.values, {value: option.value});\n    } else {\n      option.selected = true;\n      switch (facet.type) {\n        case FacetDataType.Category:\n        case FacetDataType.Typeahead:\n          if (_.isNil(facet.values)) {\n            facet.values = [];\n          }\n          option.type = FacetFilterType.contains;\n          facet.values.push(option);\n          break;\n        case FacetDataType.CategorySingle:\n        case FacetDataType.TypeaheadSingle:\n          option.type = FacetFilterType.equal;\n          facet.values = [option];\n          break;\n      }\n    }\n  };\n\n  isUpdateButtonDisabled = () => {\n    switch (this.data.type) {\n      case FacetDataType.Category:\n      case FacetDataType.CategorySingle:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.Date:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.DateRange:\n        return !(this.data.values[0].value) || !(this.data.values[1].value);\n\n      case FacetDataType.Text:\n        return !_.some(this.data.values, (val) => val.value);\n\n      case FacetDataType.Boolean:\n        return !(this.data.values[0].value);\n\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        return !_.some(this.data.values, (val) => val.value);\n    }\n  };\n\n  emptyFunction() {\n\n  }\n\n  clearInput() {\n    this.typeaheadText = '';\n    this.typeaheadValueChanged('');\n  }\n}\n","import {InjectionToken} from '@angular/core';\nimport {FacetConfig} from './models';\n\nexport const FACET_CONFIG = new InjectionToken<FacetConfig>('Facet Configuration', {\n  providedIn: 'root',\n  factory: () => new FacetConfig()\n});\n","import {Injector} from '@angular/core';\n\ninterface RawVCRefInjector {\n  _lView: any[];\n}\n\nexport class VCRefInjector {\n  private readonly raw: RawVCRefInjector;\n\n  constructor(injector: Injector) {\n    this.raw = injector as unknown as RawVCRefInjector;\n  }\n\n  get parentIdentifier(): string | null {\n    const parent = this.parent;\n    if (!!parent) {\n      return parent.tagName.toLowerCase();\n    }\n\n    return null;\n  }\n\n  get parent(): HTMLElement | null {\n    if (!!this.raw && this.raw._lView && this.raw._lView.length > 0) {\n      return this.raw._lView[0];\n    }\n\n    return null;\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {DialogPosition, MatDialog} from '@angular/material/dialog';\nimport {MatAutocompleteSelectedEvent, MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {Facet, FacetConfig, FacetDataType, FacetFilterType, FacetIdentifierStrategy} from './models';\nimport {MatChipSelectionChange} from '@angular/material/chips';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MediaObserver} from '@angular/flex-layout';\nimport * as _ from 'lodash';\nimport {fromEvent} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {CookieService} from 'ngx-cookie-service';\nimport {FACET_CONFIG} from './ngx-mat-facet.config';\nimport {VCRefInjector} from './misc/parent.helper';\nimport {v4 as uuidv4} from 'uuid';\n\n// @dynamic\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-facet-search',\n  templateUrl: 'ngx-mat-facet-search.component.html',\n  styleUrls: ['./ngx-mat-facet-search.component.css'],\n})\nexport class NgxMatFacetSearchComponent implements OnInit, AfterViewInit {\n\n  private injectorRef: VCRefInjector;\n\n  constructor(@Inject(FACET_CONFIG) configuration: FacetConfig,\n              public dialog: MatDialog,\n              public media: MediaObserver,\n              private cookieService: CookieService,\n              private vcRef: ViewContainerRef) {\n\n    this.injectorRef = new VCRefInjector(this.vcRef.injector);\n    this.searchUpdated = new EventEmitter<Facet[]>();\n    this.reconfigure(configuration);\n\n    this.searchUpdated.subscribe(facets => {\n      this.loggingCallback('Facet(s) updated', facets);\n    })\n  }\n\n  @Input() source: Facet[];\n  @Input() placeholder = 'Filter Table...';\n  @Input() clearButtonText = 'Clear Filters';\n  @Input() clearButtonEnabled = true;\n  @Input() dateFormat = 'M/d/yyyy';\n\n  @Input() tooltip: string | null = null;\n  @Input() displayFilterIcon = true;\n  @Input() facetWidth = '400px';\n  @Input() facetHasBackdrop = true;\n  @Input() confirmOnRemove = true;\n  @Input() chipLabelsEnabled = true;\n  @Input() identifier = null;\n\n  @Output() searchUpdated: EventEmitter<Facet[]>;\n\n  @ViewChild('filterInput') filterInput: ElementRef;\n  @ViewChild(MatAutocompleteTrigger, {read: MatAutocompleteTrigger}) inputAutoComplete: MatAutocompleteTrigger;\n\n  public selectedFacet: Facet;\n  public selectedFacets: Facet[] = [];\n  public availableFacets: Facet[] = [];\n  public filteredFacets: Facet[] = [];\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n  public allowDebugClick = false;\n  public cookieExpiresOn = 1;\n\n  private timeoutHandler: any;\n  private identifierStrategy: FacetIdentifierStrategy;\n\n  private static getFixedURL(): string {\n    return window.location.pathname.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/\\//g, '-')\n      .replace(/^-/g, '')\n      .replace(/--/g, '-');\n  }\n\n  private loggingCallback: (...args) => void = () => {\n  };\n\n  ngOnInit() {\n    if (!this.identifier) {\n      this.generateIdentity();\n    }\n\n    this.updateAvailableFacets();\n    this.selectedFacets = this.loadFromCookies();\n    this.source.filter(facet => facet && facet.values && Array.isArray(facet.values))\n      .forEach(facet => this.selectedFacets.push(facet));\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.filterInput.nativeElement, 'keyup')\n      .pipe(\n        filter(Boolean),\n        debounceTime(150),\n        distinctUntilChanged(),\n        map(() => this.filterInput.nativeElement.value)\n      ).subscribe((filterText) => {\n      if (!!filterText && filterText.length > 0) {\n        this.filteredFacets = this.availableFacets.filter(f => f.name.toLowerCase().includes(filterText.toLowerCase()));\n      } else {\n        this.filteredFacets = this.availableFacets;\n      }\n    });\n  }\n\n  chipSelected(event: MatChipSelectionChange, facet: Facet): void {\n    if (event.selected && !facet.readonly) {\n      const elementRef = event.source._elementRef.nativeElement;\n      const bound = elementRef.getBoundingClientRect();\n      this.facetSelected(facet, {\n        top: bound.top + bound.height + 'px',\n        left: (!this.media.isActive('xs') ? bound.left + 'px' : undefined)\n\n      }, true);\n    }\n  }\n\n  autoCompleteSelected(event: MatAutocompleteSelectedEvent): void {\n    const selectedFacet: Facet = event.option.value;\n    const elementRef = event.option._getHostElement().parentElement.getBoundingClientRect();\n    const top = elementRef.top;\n    const left = elementRef.left;\n\n    this.facetSelected(selectedFacet, {\n      top: top + 'px',\n      left: (!this.media.isActive('xs') ? left + 'px' : undefined)\n    }, false);\n\n  }\n\n  facetSelected(facet: Facet, position: DialogPosition, isUpdate: boolean): void {\n    this.promptFacet(_.cloneDeep(facet), position, isUpdate);\n  }\n\n  promptFacet(facet: Facet, position: DialogPosition, isUpdate: boolean): void {\n    this.filteredFacets = this.availableFacets;\n\n    setTimeout(() => {\n\n      const facetDetailsModal = this.dialog.open(FacetDetailsModalComponent, {\n        width: this.facetWidth,\n        hasBackdrop: this.facetHasBackdrop,\n        position,\n        backdropClass: 'transparentBackdrop',\n        panelClass: 'mat-facet-search-dialog',\n        data: facet,\n        disableClose: true,\n        closeOnNavigation: false\n      });\n      facetDetailsModal.componentInstance.removeFacet = (f: Facet) => {\n        if (this.removeFacet(f)) {\n          facetDetailsModal.close();\n        }\n      };\n      facetDetailsModal.componentInstance.isUpdate = isUpdate;\n      facetDetailsModal.componentInstance.finished = (updatedFacet: Facet) => {\n        this.addOrUpdateFacet(updatedFacet);\n        facetDetailsModal.close();\n      };\n      facetDetailsModal.beforeClosed().subscribe(() => {\n        this.selectedFacet = undefined;\n      });\n\n    }, 1);\n  }\n\n  addOrUpdateFacet(facet: Facet): void {\n    const index = _.findIndex(this.selectedFacets, {name: facet.name});\n    if (index > -1) {\n      this.selectedFacets[index] = facet;\n    } else {\n      this.selectedFacets.push(facet);\n    }\n    this.emitSelectedEvent();\n    this.updateCookies();\n  }\n\n  removeFacet(facet: Facet): boolean {\n    if (!this.confirmOnRemove || (this.confirmOnRemove && confirm('Do you really want to remove \"' + facet.labelText + '\" filter?'))) {\n      _.remove(this.selectedFacets, {name: facet.name});\n      this.emitSelectedEvent();\n      this.updateCookies();\n      return true;\n    }\n    return false;\n  }\n\n  updateAvailableFacets(): void {\n    const sourceClone = _.cloneDeep(this.source);\n    _.remove(sourceClone, (a) => {\n      return _.some(this.selectedFacets, {name: a.name});\n    });\n    this.availableFacets = sourceClone;\n    this.filteredFacets = this.availableFacets;\n  }\n\n  reset(): void {\n    this.selectedFacets = this.source.filter(facet => facet.readonly === true);\n    this.emitSelectedEvent();\n    this.clearCookies();\n  }\n\n  emitSelectedEvent(): void {\n    this.updateAvailableFacets();\n    this.searchUpdated.next(this.selectedFacets.map(facet => ({\n        name: facet.name,\n        labelText: facet.labelText,\n        type: facet.type,\n        values: facet.values.map(val => ({\n            value: val.value,\n            labelText: val.text,\n            type: val.type,\n            active: true\n          })\n        )\n      })\n      )\n    );\n  }\n\n  displayFn(...args: any): string | undefined {\n    return undefined;\n  }\n\n  focus(event) {\n    event.stopPropagation();\n    this.inputAutoComplete.openPanel();\n  }\n\n  /**\n   * Update the identity of this Facet Search Component\n   * This function does NOT reload/re-fetch previously saved facets from cookies\n   *\n   * @param identifier - new identifier for the component\n   */\n  identify(identifier: string) {\n    this.loggingCallback(`Identifying facet with ID: ${identifier}`);\n    if (!!!identifier || identifier.length === 0 || identifier === '-') {\n      this.identifier = 'default-facet';\n    } else {\n      this.identifier = `${identifier}-facet`;\n    }\n  }\n\n  /**\n   * Returns the FacetIdentifierStrategy currently being used for identity generation\n   */\n  getIdentifierStrategy(): FacetIdentifierStrategy {\n    return this.identifierStrategy;\n  }\n\n  /**\n   * Clears previously saved facets for this specific component\n   */\n  clearCookies() {\n    if (!this.identifier) {\n      return;\n    }\n\n    this.cookieService.delete(this.identifier);\n  }\n\n  /**\n   * Prints this component's identity to console\n   */\n  printIdentity() {\n    console.log(this.identifier);\n  }\n\n  /// DEBUG - Long Click Filter Icon\n  clickStarted() {\n    if (!this.allowDebugClick) {\n      return;\n    }\n\n    this.timeoutHandler = setTimeout(() => {\n      this.printIdentity();\n      this.timeoutHandler = null;\n    }, 1000);\n  }\n\n  clickEnded() {\n    if (this.timeoutHandler) {\n      clearTimeout(this.timeoutHandler);\n      this.timeoutHandler = null;\n    }\n  }\n\n  /**\n   * Reconfigure this Facet Search Component\n   * This function will reload the previously saved facets from cookies if they exist\n   *\n   * @param configuration - Partial FacetConfig\n   * @param identity - Optional identity parameter if you want to override or provide a manual value\n   */\n  reconfigure(configuration: Partial<FacetConfig> | FacetConfig, identity?: string) {\n    if (configuration) {\n      if (configuration.hasOwnProperty('allowDebugClick')) {\n        this.allowDebugClick = configuration.allowDebugClick;\n      }\n\n      if (configuration.hasOwnProperty('cookieExpiresOn')) {\n        this.cookieExpiresOn = configuration.cookieExpiresOn;\n      }\n\n      if (configuration.hasOwnProperty('identifierStrategy')) {\n        this.identifierStrategy = configuration.identifierStrategy;\n      }\n\n      if (configuration.hasOwnProperty('loggingCallback')) {\n        this.loggingCallback = configuration.loggingCallback;\n      }\n    }\n\n    const previousIdentity = `${this.identifier}`;\n    this.generateIdentity(identity);\n\n    if (previousIdentity !== this.identifier) {\n      this.loggingCallback('Loading facets from cookies for', this.identifier);\n      this.selectedFacets = this.loadFromCookies();\n    }\n\n    this.loggingCallback('Reconfigured', this.identifier);\n  }\n\n  /**\n   * Generates an identity for a Facet Search Component\n   * @param manual - manually set the identifier\n   * @private\n   */\n  private generateIdentity(manual?: string) {\n    let identity;\n\n    this.loggingCallback('Generating ID with strategy', this.identifierStrategy);\n\n    switch (this.identifierStrategy) {\n      case FacetIdentifierStrategy.WindowURL:\n        identity = NgxMatFacetSearchComponent.getFixedURL();\n        break;\n      case FacetIdentifierStrategy.ParentID:\n        identity = this.injectorRef.parentIdentifier;\n        break;\n      case FacetIdentifierStrategy.Random:\n        identity = uuidv4();\n        break;\n      default:\n        identity = manual;\n        break;\n    }\n\n    this.identify(identity);\n  }\n\n  /**\n   * Saves the selected facets to cookies for our current identifier\n   * @private\n   */\n  private updateCookies() {\n    if (!this.identifier) {\n      this.loggingCallback('Cannot update cookies, no ID set');\n      return;\n    }\n\n    if (this.selectedFacets.length === 0) {\n      this.clearCookies();\n      this.loggingCallback('Clearing cookies for component with ID', this.identifier);\n      return;\n    }\n\n    this.loggingCallback('Saving facets in cookies for component with ID', this.identifier);\n    this.cookieService.set(this.identifier, JSON.stringify(this.selectedFacets), this.cookieExpiresOn);\n  }\n\n  /**\n   * Loads facets from cookies for our current identifier\n   * @private\n   */\n  private loadFromCookies(): Facet[] {\n    let cookieFacets = [];\n\n    if (!!this.identifier && this.cookieService.check(this.identifier)) {\n      cookieFacets = JSON.parse(this.cookieService.get(this.identifier));\n      this.loggingCallback('Loaded facets for component with ID', this.identifier);\n    } else if (!this.identifier) {\n      this.loggingCallback('No identifier set on this component');\n    } else if (!this.cookieService.check(this.identifier)) {\n      this.loggingCallback('No cookies set for component with ID', this.identifier);\n    }\n\n    setTimeout(() => {\n      this.emitSelectedEvent();\n    }, 500);\n\n    return cookieFacets;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'csv',\n  pure: false\n})\nexport class CSVPipe implements PipeTransform {\n\n  transform(value: Array<object>, objectKeyName: string, separator: string): any {\n    return _.map(value,  (element) => {\n      return objectKeyName ? element[objectKeyName] : element;\n    }).join(separator || ',');\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n  transform(objectArray: Array<object>, fieldName: string, fieldValue: any): any {\n    return _.filter(objectArray, (obj) => {\n      return obj[fieldName] === fieldValue;\n    });\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\nimport * as _ from 'lodash';\n\n@Pipe({\n  name: 'keys',\n  pure: false\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    return _.map(_.keys(value), (x) => {\n      return {\n        key: x,\n        value: x\n      };\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxMatFacetSearchComponent} from './ngx-mat-facet-search.component';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CommonModule} from '@angular/common';\nimport {MatListModule} from '@angular/material/list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexLayoutModule} from '@angular/flex-layout';\nimport {CSVPipe, FilterPipe, KeysPipe} from './pipes';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {CookieService} from 'ngx-cookie-service';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatDialogModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n  ],\n  declarations: [\n    CSVPipe,\n    FilterPipe,\n    KeysPipe,\n    NgxMatFacetSearchComponent,\n    FacetDetailsModalComponent,\n  ],\n  exports: [NgxMatFacetSearchComponent],\n  entryComponents: [FacetDetailsModalComponent],\n  providers: [CookieService]\n})\nexport class NgxMatFacetSearchModule {\n}\n","/*\n * Public API Surface of ngx-mat-facet-search\n */\n\nexport * from './lib/ngx-mat-facet-search.component';\nexport * from './lib/ngx-mat-facet-search.module';\nexport * from './lib/models';\nexport * from './lib/ngx-mat-facet.config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FacetDetailsModalComponent as ɵe} from './lib/modals/facet-details-modal/facet-details-modal.component';\nexport {Facet as ɵf,FacetConfig as ɵa} from './lib/models';\nexport {CSVPipe as ɵb,FilterPipe as ɵc,KeysPipe as ɵd} from './lib/pipes';","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageOneComponent\n  },\n  {\n    path: 'two',\n    component: PageTwoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {FACET_CONFIG, FacetConfig, FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport packageData from '../../../ngx-mat-facet-search/package.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: FACET_CONFIG, useFactory: () => {\n        return new FacetConfig({\n          loggingCallback: (...args) => {\n            console.log(...args);\n          },\n          identifierStrategy: FacetIdentifierStrategy.ParentID\n        });\n      }\n    }\n  ]\n})\nexport class AppComponent implements OnInit {\n\n  showPageOne = true;\n  showPageTwo = true;\n  version = packageData.version;\n  repo = packageData.repository;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const currentURL = event.url;\n        if (currentURL.includes('two')) {\n          this.showPageTwo = false;\n          this.showPageOne = true;\n          console.log('Page Two');\n        } else {\n          this.showPageOne = false;\n          this.showPageTwo = true;\n          console.log('Page One');\n        }\n      }\n    });\n  }\n}\n","<mat-toolbar>\n  <span>Angular Material Facet Search: v{{version}}</span>\n  <span class=\"spacer\"></span>\n  <a mat-button routerLink=\"\" [color]=\"showPageTwo ? 'primary' : ''\">\n    Page One\n  </a>\n  <a mat-button routerLink=\"/two\" [color]=\"showPageOne ? 'primary' : ''\">\n    Page Two\n  </a>\n  <span class=\"spacer\"></span>\n  <a [href]=\"repo\" target=\"_blank\" mat-stroked-button>View on GitHub</a>\n</mat-toolbar>\n\n<div fxLayout=\"column\" class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMatFacetSearchModule} from 'ngx-mat-facet-search';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {OutputComponent} from './components/output/output.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageOneComponent,\n    PageTwoComponent,\n    SettingsComponent,\n    OutputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxMatFacetSearchModule,\n    MatCardModule,\n    FlexModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatTooltipModule,\n    FormsModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {of} from 'rxjs';\nimport {FacetOption} from 'ngx-mat-facet-search';\nimport {delay, map, tap} from 'rxjs/operators';\n\nexport const  testEmptyFilterTypeahead = (text: string) => {\n  return of([\n    {value: '-a', text: ' A'},\n    {value: '-b', text: ' B'},\n    {value: '-c', text: ' C'}\n  ] as FacetOption[]).pipe(\n    map(values => {\n      const filtered = values.filter(value => value.text.includes(text));\n\n      if (filtered.length === 0) {\n        return null;\n      }\n\n      return filtered;\n    }),\n    delay(300),\n    tap(values => console.log('Test empty:', values))\n  );\n};\n","import { Component, OnInit } from '@angular/core';\nimport {Facet} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-output',\n  templateUrl: './output.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent implements OnInit {\n\n  public selectedFacets: Facet[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  filterUpdated(facetFilters: Facet[]): void {\n    this.selectedFacets = facetFilters;\n    console.log('filter', facetFilters);\n  }\n}\n","<mat-card fxFlex>\n  <mat-card-title>Output</mat-card-title>\n  <mat-card-content>\n    <pre>{{selectedFacets | json }}</pre>\n  </mat-card-content>\n</mat-card>\n","<mat-card fxFlex=\"1 1 auto\">\n  <mat-card-title>Settings</mat-card-title>\n  <mat-card-content fxLayout=\"column\">\n    <mat-checkbox [(ngModel)]=\"chipLabelsEnabled\">Chip labels</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"clearButtonEnabled\">\"Clear\" Button</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"confirmOnRemove\">Confirmation on remove</mat-checkbox>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>ID Generation Strategy</mat-label>\n      <mat-select [(value)]=\"currentStrategy\" (selectionChange)=\"strategyUpdated.emit($event.value)\">\n        <mat-option *ngFor=\"let strategy of allStrategies\" [value]=\"getRawStrategy(strategy)\">\n          {{displayStrategy(strategy)}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <pre matTooltip=\"Current Identifier\">{{currentIdentifier}}</pre>\n\n    <mat-form-field class=\"manual-input\" *ngIf=\"showManualInput|async\" appearance=\"outline\">\n      <mat-label>Manual Identifier</mat-label>\n      <input #manualInput matInput placeholder=\"cool-beans\" [(ngModel)]=\"manualIdentifier\"\n             (change)=\"manualIdentifierUpdated.next(manualInput.value)\">\n    </mat-form-field>\n\n  </mat-card-content>\n</mat-card>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport {BehaviorSubject} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  // Settings\n  public chipLabelsEnabled = true;\n  public clearButtonEnabled = true;\n  public confirmOnRemove = true;\n\n  @Output()\n  strategyUpdated = new EventEmitter<FacetIdentifierStrategy>(true);\n\n  @Output()\n  manualIdentifierUpdated = new EventEmitter<string>(true);\n\n  @Input()\n  set strategy(value: any) {\n    this.currentStrategy = value;\n  }\n\n  @Input()\n  currentIdentifier = '';\n\n  public allStrategies = [];\n  public currentStrategy: FacetIdentifierStrategy;\n  public showManualInput = new BehaviorSubject(false);\n  public manualIdentifier = '';\n\n  constructor() {\n    this.allStrategies = Object.keys(FacetIdentifierStrategy);\n    this.strategyUpdated.pipe(\n      map(v => v.toLowerCase() === 'manual')\n    ).subscribe(this.showManualInput);\n  }\n\n  ngOnInit(): void {\n  }\n\n\n  getRawStrategy(strategy: FacetIdentifierStrategy) {\n    return FacetIdentifierStrategy[strategy];\n  }\n\n  displayStrategy(raw: string): string {\n    switch (raw) {\n      case 'WindowURL':\n        return 'Window URL';\n      case 'ParentID':\n        return 'Parent ID';\n      default:\n        return raw;\n    }\n  }\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {of} from 'rxjs';\nimport {Facet, FacetDataType, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\nimport {delay} from 'rxjs/operators';\nimport {testEmptyFilterTypeahead} from '../../common.helpers';\n\n@Component({\n  selector: 'app-page-one',\n  templateUrl: './page-one.component.html',\n  styleUrls: ['./page-one.component.scss']\n})\nexport class PageOneComponent {\n\n  constructor() {\n    this.facets = [\n      {\n        name: 'userName',\n        labelText: 'Person Name',\n        type: FacetDataType.Text,\n        description: 'Please enter your user name (simple text input example)',\n        icon: 'person_outline'\n      }, {\n        name: 'birthday',\n        labelText: 'Birthday',\n        icon: 'date_range',\n        description: 'Please select your birthday (date select example)',\n        type: FacetDataType.Date,\n      },\n      {\n        name: 'eventDays',\n        labelText: 'Event Days',\n        icon: 'event_available',\n        description: 'Please select start and end dates (date range select example)',\n        type: FacetDataType.DateRange,\n      },\n      {\n        name: 'isParticipant',\n        labelText: 'Is a Participant?',\n        icon: 'live_help',\n        description: 'This is a test field, you can test boolean data type.',\n        type: FacetDataType.Boolean,\n      },\n      {\n        name: 'state',\n        labelText: 'State',\n        description: 'Please select something (single select, http example)',\n        type: FacetDataType.CategorySingle,\n        icon: 'folder_open',\n        /* mock http service call  */\n        options: of([\n          {value: 'open', text: 'Open', count: 49},\n          {value: 'closed', text: 'Closed', count: 23}\n        ]).pipe(delay(700))\n      },\n      {\n        name: 'license',\n        labelText: 'License(s)',\n        description: 'Please select your licenses (multi select, http example)',\n        type: FacetDataType.Category,\n        icon: 'drive_eta',\n        /* mock http service call  */\n        options: of([\n          {value: 'a', text: 'Class A'},\n          {value: 'b', text: 'Class B'},\n          {value: 'c', text: 'Class C'}\n        ]).pipe(delay(1200))\n      },\n      {\n        name: 'city',\n        labelText: 'Cities',\n        description: 'Please select from cities.',\n        type: FacetDataType.Typeahead,\n        icon: 'location_city',\n        typeahead: {\n          function: (txt) => {\n            return of([\n              {value: txt + '-a', text: txt + ' A'},\n              {value: txt + '-b', text: txt + ' B'},\n              {value: txt + '-c', text: txt + ' C'}\n            ]).pipe(delay(1200));\n          },\n        }\n      },\n      {\n        name: 'empty',\n        labelText: 'Empty Test',\n        description: 'Please select from options.',\n        type: FacetDataType.Typeahead,\n        icon: 'clear',\n        typeahead: {\n          function: testEmptyFilterTypeahead,\n          placeholder: 'Empty'\n        }\n      }\n    ];\n  }\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {Facet, FacetDataType, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\nimport {of} from 'rxjs';\nimport {delay} from 'rxjs/operators';\nimport {testEmptyFilterTypeahead} from '../../common.helpers';\n\n@Component({\n  selector: 'app-page-two',\n  templateUrl: './page-two.component.html',\n  styleUrls: ['./page-two.component.scss']\n})\nexport class PageTwoComponent {\n\n  constructor() {\n    this.facets = [\n      {\n        name: 'userName',\n        labelText: 'User Name',\n        type: FacetDataType.Text,\n        description: 'Please enter your user name (simple text input example)',\n        icon: 'person_outline'\n      }, {\n        name: 'birthday',\n        labelText: 'Birthday',\n        icon: 'date_range',\n        description: 'Please select your birthday (date select example)',\n        type: FacetDataType.Date,\n      },\n      {\n        name: 'eventDays',\n        labelText: 'Event Days',\n        icon: 'event_available',\n        description: 'Please select start and end dates (date range select example)',\n        type: FacetDataType.DateRange,\n      },\n      {\n        name: 'isParticipant',\n        labelText: 'Is a Participant?',\n        icon: 'live_help',\n        description: 'This is a test field, you can test boolean data type.',\n        type: FacetDataType.Boolean,\n      },\n      {\n        name: 'state',\n        labelText: 'State',\n        description: 'Please select something (single select, http example)',\n        type: FacetDataType.CategorySingle,\n        icon: 'folder_open',\n        /* mock http service call  */\n        options: of([\n          {value: 'open', text: 'Open', count: 49},\n          {value: 'closed', text: 'Closed', count: 23}\n        ]).pipe(delay(700))\n      },\n      {\n        name: 'license',\n        labelText: 'License(s)',\n        description: 'Please select your licenses (multi select, http example)',\n        type: FacetDataType.Category,\n        icon: 'drive_eta',\n        /* mock http service call  */\n        options: of([\n          {value: 'a', text: 'Class A'},\n          {value: 'b', text: 'Class B'},\n          {value: 'c', text: 'Class C'}\n        ]).pipe(delay(1200))\n      },\n      {\n        name: 'city',\n        labelText: 'Cities',\n        description: 'Please select from cities.',\n        type: FacetDataType.Typeahead,\n        icon: 'location_city',\n        typeahead: {\n          function: (txt) => {\n            return of([\n              {value: txt + '-a', text: txt + ' A'},\n              {value: txt + '-b', text: txt + ' B'},\n              {value: txt + '-c', text: txt + ' C'}\n            ]).pipe(delay(1200));\n          },\n        }\n      },\n      {\n        name: 'empty',\n        labelText: 'Empty Test',\n        description: 'Please select from options.',\n        type: FacetDataType.Typeahead,\n        icon: 'clear',\n        typeahead: {\n          function: testEmptyFilterTypeahead,\n          placeholder: 'Empty'\n        }\n      }\n    ];\n  }\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1854;\nmodule.exports = webpackEmptyAsyncContext;"]}