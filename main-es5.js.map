{"version":3,"sources":["webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-data-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-filter-type.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-config.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/models/facet-result.model.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal.ref.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal.data.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-details-modal/facet-details-modal.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet.config.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/misc/parent.helper.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal.config.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal/facet-modal.animations.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal/facet-modal.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/modals/facet-modal.service.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.animations.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.component.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/csv/csv.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/filter/filter.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/pipes/keys/keys.pipe.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/directives/focus-on-show.directive.ts","webpack:///dist/projects/ngx-mat-facet-search/src/lib/ngx-mat-facet-search.module.ts","webpack:///dist/projects/ngx-mat-facet-search/src/public-api.ts","webpack:///dist/projects/ngx-mat-facet-search/src/ngx-mat-facet-search.ts","webpack:///projects/demo-application/src/app/app-routing.module.ts","webpack:///projects/demo-application/src/app/app.component.ts","webpack:///projects/demo-application/src/app/app.component.html","webpack:///projects/demo-application/src/app/app.module.ts","webpack:///projects/demo-application/src/app/common.helpers.ts","webpack:///projects/demo-application/src/app/components/output/output.component.ts","webpack:///projects/demo-application/src/app/components/output/output.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.html","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.ts","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.html","webpack:///projects/demo-application/src/environments/environment.ts","webpack:///projects/demo-application/src/main.ts","webpack:///projects/demo-application/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":["FacetDataType","FacetFilterType","FacetIdentifierStrategy","FacetConfig","configuration","allowDebugClick","identifierStrategy","ParentID","loggingCallback","hasOwnProperty","FacetResultType","FacetModalRef","overlayRef","positionStrategy","config","afterClosedSubject","Subject","beforeClosedSubject","_result","type","CANCEL","disableClose","backdropClick","subscribe","close","detachments","next","complete","keydownEvents","pipe","filter","event","key","dialogResult","dispose","asObservable","positionChanges","FACET_MODAL_DATA","InjectionToken","MAX_TEXT_LENGTH","FacetDetailsModalComponent","data","modalRef","clearButtonDisabled","typeAheadInputChanged","BehaviorSubject","isItemSelected","option","values","some","o","value","addOptionToSelected","facet","f","Category","Typeahead","selected","undefined","contains","push","CategorySingle","TypeaheadSingle","equal","isUpdateButtonDisabled","Date","Text","v","DateRange","Boolean","isUpdate","typeahead","options","startsWith","endsWith","typeAheadInputs","length","tap","debounceTime","debounce","search","of","txt","substring","trim","ADD","REMOVE","onOk","typeaheadText","typeaheadValueChanged","selection","map","selectedOption","find","facetOption","forEach","Inject","ViewChildren","FACET_CONFIG","providedIn","factory","VCRefInjector","injector","raw","parent","tagName","toLowerCase","_lView","DefaultFacetModalConfig","backdropClass","panelClass","facetModalAnimations","modalContainer","trigger","state","style","opacity","transform","transition","animate","FacetModalComponent","hostClass","animationStateChanged","EventEmitter","componentPortal","portalOutlet","attachComponentPortal","portal","toState","totalTime","BasePortalOutlet","t","ViewChild","CdkPortalOutlet","HostBinding","HostListener","FacetModalService","overlay","component","target","facetModalConfig","Object","assign","offsetY","offsetX","position","flexibleConnectedTo","withPush","withFlexibleDimensions","withPositions","overlayX","overlayY","originX","originY","create","hasBackdrop","scrollStrategy","scrollStrategies","block","Injector","providers","provide","useValue","modal","attach","ComponentPortal","instance","chipAnimation","NgxMatFacetSearchComponent","media","vcRef","placeholder","clearButtonText","clearButtonEnabled","dateFormat","tooltip","displayFilterIcon","facetWidth","facetHasBackdrop","confirmOnRemove","chipLabelsEnabled","identifier","selectedFacets","availableFacets","filteredFacets","sourceFacets","injectorRef","searchUpdated","reconfigure","facets","s","name","emitSelectedEvent","generateIdentity","updateAvailableFacets","loadFromSessionStorage","updateSessionStorage","Array","isArray","fromEvent","filterInput","nativeElement","distinctUntilChanged","filterText","includes","readonly","elementRef","source","_elementRef","bound","parentElement","getBoundingClientRect","left","offsetLeft","x","facetSelected","top","height","selectedFacet","_getHostElement","isActive","promptFacet","facetDetailsModal","open","Math","abs","beforeClosed","afterClosed","result","removeFacet","addOrUpdateFacet","index","findIndex","confirm","labelText","clearSessionStorage","val","text","active","stopPropagation","inputAutoComplete","openPanel","sessionStorage","removeItem","console","log","timeoutHandler","setTimeout","printIdentity","clearTimeout","identity","previousIdentity","manual","WindowURL","getFixedURL","parentIdentifier","Random","uuidv4","identify","setItem","JSON","stringify","sessionFacets","getItem","parse","window","location","pathname","toString","replace","MediaObserver","ViewContainerRef","Input","Output","MatAutocompleteTrigger","read","CSVPipe","objectKeyName","separator","e","join","FilterPipe","objectArray","fieldName","fieldValue","obj","KeysPipe","keys","k","FocusOnShowDirective","el","timeout","first","focus","Error","focusInput","input","select","ElementRef","NgxMatFacetSearchModule","routes","path","PageOneComponent","PageTwoComponent","AppRoutingModule","RouterModule","AppComponent","router","showPageOne","showPageTwo","version","repo","events","NavigationEnd","currentURL","url","useFactory","AppModule","BrowserModule","BrowserAnimationsModule","MatCardModule","FlexModule","MatCheckboxModule","MatDividerModule","MatToolbarModule","MatButtonModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatTooltipModule","FormsModule","SettingsComponent","OutputComponent","testEmptyFilterTypeahead","filtered","delay","randomValueArray","Set","from","floor","random","num","lotsOfValuesTypeAhead","facetFilters","manualIdentifierUpdated","isUsingSetB","strategyUpdated","facetsUpdated","currentIdentifier","allStrategies","showManualInput","manualIdentifier","allFacets","description","icon","count","chunkArray","arr","n","chunkLength","max","chunks","i","slice","currentStrategy","toggleSet","strategy","chunked","emit","newStrategy","facetSearch","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","code","id","module","exports"],"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","file":"main-es5.js","sourcesContent":["export enum FacetDataType {\n  Text = 'Text',\n  Boolean = 'Boolean',\n  Category = 'Category',\n  CategorySingle = 'CategorySingle',\n  Date = 'Date',\n  DateRange = 'DateRange',\n  Typeahead = 'Typeahead',\n  TypeaheadSingle = 'TypeaheadSingle'\n}\n","export enum FacetFilterType {\n  contains = 'contains',\n  startsWith = 'startsWith',\n  endsWith = 'endsWith',\n  equal = 'equal',\n  and = 'and',\n  between = 'between',\n  greaterThan = 'greaterThan',\n  lessThan = 'lessThan',\n  greaterThanOrEqual = 'greaterThanOrEqual',\n  lessThanOrEqual = 'lessThanOrEqual'\n}\n","export enum FacetIdentifierStrategy {\n  WindowURL = 'windowURL',\n  ParentID = 'parentID',\n  Random = 'random',\n  Manual = 'manual'\n}\n\nexport class FacetConfig {\n  allowDebugClick = true;\n  identifierStrategy: FacetIdentifierStrategy = FacetIdentifierStrategy.ParentID;\n  loggingCallback: (...args) => void = () => {}\n\n  constructor(configuration?: Partial<FacetConfig>) {\n    if (configuration) {\n      if (configuration.hasOwnProperty('allowDebugClick')) {\n        this.allowDebugClick = configuration.allowDebugClick;\n      }\n\n      if (configuration.hasOwnProperty('identifierStrategy')) {\n        this.identifierStrategy = configuration.identifierStrategy;\n      }\n\n      if (configuration.hasOwnProperty('loggingCallback')) {\n        this.loggingCallback = configuration.loggingCallback;\n      }\n    }\n  }\n}\n","export enum FacetResultType {\n  REMOVE,\n  CANCEL,\n  ADD\n}\n\nexport interface FacetResult {\n  type: FacetResultType,\n  data?: any\n}\n","import {ConnectedOverlayPositionChange, FlexibleConnectedPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {filter} from 'rxjs/operators';\nimport {FacetModalConfig} from './facet-modal.config';\nimport {FacetResult, FacetResultType} from '../models';\n\n\nexport class FacetModalRef {\n  private afterClosedSubject = new Subject<FacetResult>();\n  private beforeClosedSubject = new Subject<FacetResult>();\n\n  private _result: FacetResult = {type: FacetResultType.CANCEL};\n\n  constructor(private overlayRef: OverlayRef,\n              private positionStrategy: FlexibleConnectedPositionStrategy,\n              public config: FacetModalConfig) {\n    if (!config.disableClose) {\n      this.overlayRef.backdropClick().subscribe(() => {\n        this.close(this._result);\n      });\n\n      this.overlayRef.detachments().subscribe(() => {\n        this.beforeClosedSubject.next(this._result);\n        this.beforeClosedSubject.complete();\n      });\n\n      this.overlayRef.keydownEvents().pipe(\n        filter(event => event.key === 'Escape')\n      ).subscribe(() => {\n        this.close();\n      });\n    }\n  }\n\n  close(dialogResult?: FacetResult): void {\n    this._result = dialogResult;\n\n    this.beforeClosedSubject.next(this._result);\n    this.beforeClosedSubject.complete();\n\n    this.afterClosedSubject.next(this._result);\n    this.afterClosedSubject.complete();\n\n    this.overlayRef.dispose();\n  }\n\n  afterClosed(): Observable<FacetResult> {\n    return this.afterClosedSubject.asObservable();\n  }\n\n  beforeClosed(): Observable<FacetResult> {\n    return this.beforeClosedSubject.asObservable();\n  }\n\n  positionChanges(): Observable<ConnectedOverlayPositionChange> {\n    return this.positionStrategy.positionChanges;\n  }\n}\n","import {InjectionToken} from '@angular/core';\n\nexport const FACET_MODAL_DATA = new InjectionToken('facet.data');\n","import {AfterViewInit, Component, ElementRef, Inject, OnInit, QueryList, ViewChildren} from '@angular/core';\nimport {debounceTime, tap} from 'rxjs/operators';\nimport {Facet, FacetDataType, FacetFilterType, FacetOption, FacetResultType} from '../../models';\nimport {BehaviorSubject, of} from 'rxjs';\nimport {animate, style, transition, trigger} from '@angular/animations';\nimport {FacetModalRef} from '../facet-modal.ref';\nimport {FACET_MODAL_DATA} from '../facet-modal.data';\nimport {MatSelectionListChange} from '@angular/material/list';\n\nconst MAX_TEXT_LENGTH = 60;\n\n@Component({\n  selector: 'ngx-mat-facet-details-modal',\n  templateUrl: './facet-details-modal.component.html',\n  styleUrls: ['./facet-details-modal.component.scss'],\n  animations: [\n    trigger('fadeIn', [\n      transition(':enter', [\n        style({opacity: '0', height: 0}),\n        animate('.2s ease-out', style({opacity: '1', height: '*'})),\n      ]),\n    ]),\n  ],\n})\nexport class FacetDetailsModalComponent implements OnInit, AfterViewInit {\n\n  @ViewChildren('typeAheadInput') typeAheadInputs: QueryList<ElementRef>;\n\n  public isUpdate: boolean;\n  public typeaheadText: string;\n  public clearButtonDisabled = true;\n\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n\n  private typeAheadInputChanged = new BehaviorSubject<string>('');\n\n  constructor(@Inject(FACET_MODAL_DATA) public data: Facet, public modalRef: FacetModalRef) {\n    this.isUpdate = modalRef.config.isUpdate;\n  }\n\n  ngOnInit() {\n    switch (this.data.type) {\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        // Go ahead and run query by default\n        if (this.data.typeahead && this.data.typeahead.function) {\n          this.data.options = this.data.typeahead.function('');\n        }\n        break;\n\n      case FacetDataType.Date:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.DateRange:\n        this.data.values = this.data.values || [{type: FacetFilterType.startsWith}, {type: FacetFilterType.endsWith}];\n        break;\n\n      case FacetDataType.Boolean:\n        this.data.values = this.data.values || [{type: FacetFilterType.equal}];\n        break;\n\n      case FacetDataType.Text:\n        this.data.values = this.data.values || [{type: FacetFilterType.contains, value: ''}];\n        break;\n\n      default:\n        this.data.values = this.data.values || [{}];\n    }\n  }\n\n  /**\n   * Setup debounce on the TypeAhead search\n   */\n  ngAfterViewInit() {\n    if (this.typeAheadInputs.length > 0) {\n      this.typeAheadInputChanged.pipe(\n        tap(() => this.data.options = undefined),\n        debounceTime(this.data.typeahead.debounce || 300),\n      ).subscribe(search => {\n        this.data.typeahead.function((search||'')).subscribe(options => {\n            if (!!options) {\n              this.data.options = of(options);\n            } else {\n              this.data.options = of([]);\n            }\n          }\n        );\n      });\n    }\n  }\n\n  typeaheadValueChanged(event) {\n    this.typeAheadInputChanged.next(event);\n    this.clearButtonDisabled = (!!!event || event.length === 0);\n  }\n\n  truncateText(txt: string): string {\n    if (txt && txt.length) {\n      return txt.length > MAX_TEXT_LENGTH ?\n        `${txt.substring(0, MAX_TEXT_LENGTH).trim()}...` :\n        txt;\n\n    } else {\n      return txt;\n    }\n\n  }\n\n  onOk(): void {\n    this.modalRef.close({\n      type: FacetResultType.ADD,\n      data: this.data\n    });\n  }\n\n  onRemove(): void {\n    this.modalRef.close({\n      type: FacetResultType.REMOVE,\n      data: this.data\n    });\n  }\n\n  onCancel(): void {\n    this.modalRef.close({\n      type: FacetResultType.CANCEL,\n    });\n  }\n\n  onClose(): void {\n    this.modalRef.close();\n  }\n\n  validateAndSubmit() {\n    if (!this.isUpdateButtonDisabled()) {\n      this.onOk();\n    }\n  }\n\n  isItemSelected = (option: FacetOption): boolean => {\n    return (this.data.values || []).some(o => o.value === option.value);\n  };\n\n  addOptionToSelected = (facet: Facet, option: FacetOption): void => {\n    if ((facet.values || []).some(f => f.value === option.value) &&\n      (facet.type === FacetDataType.Category || facet.type === FacetDataType.Typeahead)) {\n      facet.values = facet.values.filter(f => f.value !== option.value);\n    } else {\n      option.selected = true;\n      switch (facet.type) {\n        case FacetDataType.Category:\n        case FacetDataType.Typeahead:\n          if (facet.values === null || facet.values === undefined) {\n            facet.values = [];\n          }\n          option.type = FacetFilterType.contains;\n          facet.values.push(option);\n          break;\n        case FacetDataType.CategorySingle:\n        case FacetDataType.TypeaheadSingle:\n          option.type = FacetFilterType.equal;\n          facet.values = [option];\n          break;\n      }\n    }\n  };\n\n  isUpdateButtonDisabled = () => {\n    switch (this.data.type) {\n      case FacetDataType.Category:\n      case FacetDataType.CategorySingle:\n      case FacetDataType.Date:\n      case FacetDataType.Text:\n      case FacetDataType.Typeahead:\n      case FacetDataType.TypeaheadSingle:\n        return !(this.data.values || []).some(v => v.value);\n      case FacetDataType.DateRange:\n        return !(this.data.values[0].value) || !(this.data.values[1].value);\n      case FacetDataType.Boolean:\n        return !(this.data.values[0].value);\n    }\n  };\n\n  emptyFunction() {}\n\n  clearInput() {\n    this.typeaheadText = null;\n    this.typeaheadValueChanged(null);\n  }\n\n  selectionChange(selection: MatSelectionListChange, facet: Facet, options?: FacetOption[]) {\n    selection.options.filter(option => option.selected)\n      .map(selectedOption => (options || []).find(option => option.value === selectedOption.value))\n      .filter(facetOption => !(facet.values || []).find(v => v === facetOption.value))\n      .forEach(selectedOption => this.addOptionToSelected(facet, selectedOption));\n  }\n}\n","import {InjectionToken} from '@angular/core';\nimport {FacetConfig} from './models';\n\nexport const FACET_CONFIG = new InjectionToken<FacetConfig>('Facet Configuration', {\n  providedIn: 'root',\n  factory: () => new FacetConfig()\n});\n","import {Injector} from '@angular/core';\n\ninterface RawVCRefInjector {\n  _lView: any[];\n}\n\nexport class VCRefInjector {\n  private readonly raw: RawVCRefInjector;\n\n  constructor(injector: Injector) {\n    this.raw = injector as unknown as RawVCRefInjector;\n  }\n\n  get parentIdentifier(): string | null {\n    const parent = this.parent;\n    if (!!parent) {\n      return parent.tagName.toLowerCase();\n    }\n\n    return null;\n  }\n\n  get parent(): HTMLElement | null {\n    if (!!this.raw && this.raw._lView && this.raw._lView.length > 0) {\n      return this.raw._lView[0];\n    }\n\n    return null;\n  }\n}\n","export interface FacetModalConfig<T = any> {\n  backdropClass: string;\n  data?: T;\n  disableClose: boolean;\n  panelClass: string | string[];\n  offsetX?: number;\n  offsetY?: number;\n  isUpdate: boolean;\n}\n\n\nexport const DefaultFacetModalConfig: FacetModalConfig = {\n  backdropClass: '',\n  disableClose: false,\n  panelClass: '',\n  isUpdate: false,\n};\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\nexport const facetModalAnimations: {\n  readonly modalContainer: AnimationTriggerMetadata;\n} = {\n  modalContainer: trigger('modalContainer', [\n    state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n    state('enter', style({transform: 'none'})),\n    transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n      style({transform: 'none', opacity: 1}))),\n    transition('* => void, * => exit',\n      animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","import {Component, ComponentRef, EmbeddedViewRef, ViewChild, EventEmitter, HostBinding, HostListener} from '@angular/core';\nimport {BasePortalOutlet, CdkPortalOutlet, ComponentPortal, TemplatePortal} from '@angular/cdk/portal';\nimport {AnimationEvent} from '@angular/animations';\nimport {facetModalAnimations} from './facet-modal.animations';\n\ninterface FacetModalAnimationEvent {\n  state: 'opened' | 'opening' | 'closing' | 'closed';\n  totalTime: number;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-facet-modal',\n  templateUrl: './facet-modal.component.html',\n  styleUrls: ['./facet-modal.component.scss'],\n  animations: [facetModalAnimations.modalContainer],\n})\nexport class FacetModalComponent extends BasePortalOutlet {\n\n  @ViewChild(CdkPortalOutlet, {static: true}) portalOutlet: CdkPortalOutlet;\n  @HostBinding('class') hostClass = 'facet-modal-component';\n\n\n  state: 'void' | 'enter' | 'exit' = 'enter';\n  animationStateChanged = new EventEmitter<FacetModalAnimationEvent>();\n\n  @HostBinding('@modalContainer') get animationState(): string {\n    return this.state;\n  }\n\n  attachComponentPortal<T>(componentPortal: ComponentPortal<any>): ComponentRef<T> {\n    return this.portalOutlet.attachComponentPortal(componentPortal);\n  }\n\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    return undefined;\n  }\n\n  @HostListener('@modalContainer.done', ['$event']) _onAnimationDone({toState, totalTime}: AnimationEvent) {\n    if (toState === 'enter') {\n      this.animationStateChanged.next({state: 'opened', totalTime});\n    } else if (toState === 'exit') {\n      this.animationStateChanged.next({state: 'closed', totalTime});\n    }\n  }\n\n  @HostListener('@modalContainer.start', ['$event']) _onAnimationStart({toState, totalTime}: AnimationEvent) {\n    if (toState === 'enter') {\n      this.animationStateChanged.next({state: 'opening', totalTime});\n    } else if (toState === 'exit' || toState === 'void') {\n      this.animationStateChanged.next({state: 'closing', totalTime});\n    }\n  }\n\n  _startExitAnimation(): void {\n    this.state = 'exit';\n  }\n}\n","import {ComponentType, Overlay} from '@angular/cdk/overlay';\nimport {ComponentPortal} from '@angular/cdk/portal';\nimport {Injectable, ElementRef, Injector} from '@angular/core';\nimport {DefaultFacetModalConfig, FacetModalConfig} from './facet-modal.config';\nimport {FacetModalRef} from './facet-modal.ref';\nimport {FacetDetailsModalComponent} from './facet-details-modal/facet-details-modal.component';\nimport {FacetModalComponent} from './facet-modal/facet-modal.component';\nimport {FACET_MODAL_DATA} from './facet-modal.data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacetModalService {\n\n  constructor(private overlay: Overlay,\n              private injector: Injector) {\n  }\n\n  open(component: ComponentType<FacetDetailsModalComponent>,\n       target: ElementRef | HTMLElement,\n       config: Partial<FacetModalConfig> = {}): FacetModalRef {\n\n    const facetModalConfig: FacetModalConfig = Object.assign({}, DefaultFacetModalConfig, config);\n\n    const offsetY = facetModalConfig.offsetY || 0;\n    const offsetX = facetModalConfig.offsetX || 0;\n\n    const positionStrategy = this.overlay\n      .position()\n      .flexibleConnectedTo(target)\n      .withPush(false)\n      .withFlexibleDimensions(true)\n      .withPositions([\n        {\n          overlayX: 'start',\n          overlayY: 'top',\n          originX: 'start',\n          originY: 'center',\n          offsetY,\n          offsetX\n        },\n      ]);\n\n    const overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.block()\n    });\n\n\n    const modalRef = new FacetModalRef(overlayRef, positionStrategy, facetModalConfig);\n\n    const injector = Injector.create({\n      providers: [\n        {\n          provide: FACET_MODAL_DATA,\n          useValue: config.data\n        },\n        {\n          provide: FacetModalRef,\n          useValue: modalRef\n        },\n      ],\n      parent: this.injector\n    });\n\n    const modal = overlayRef.attach(new ComponentPortal(FacetModalComponent, null, injector)).instance;\n    modal.attachComponentPortal(new ComponentPortal<any>(component, null, injector));\n\n    return modalRef;\n  }\n}\n","import {animate, state, style, transition, trigger} from '@angular/animations';\n\nexport const chipAnimation = [\n  trigger('chipAnimation', [\n    state('in', style({\n        transform: 'translateX(0)',\n        opacity: 0,\n        position: 'absolute'\n      })\n    ),\n    transition('void => *', [\n      style({\n        transform: 'translateX(-100%)',\n        opacity: 1,\n        position: '*'\n      }),\n      animate('200ms ease-out')\n    ]),\n    transition('* => void', [\n      style({\n        position: 'absolute'\n      }),\n      animate('200ms ease-in', style({\n        transform: 'translateX(-100%)',\n        opacity: 0\n      }))\n    ])\n  ])\n]\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewContainerRef\n} from '@angular/core';\nimport {MatAutocompleteSelectedEvent, MatAutocompleteTrigger} from '@angular/material/autocomplete';\nimport {Facet, FacetConfig, FacetDataType, FacetFilterType, FacetIdentifierStrategy, FacetResultType} from './models';\nimport {MatChipSelectionChange} from '@angular/material/chips';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MediaObserver} from '@angular/flex-layout';\nimport {fromEvent} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {FACET_CONFIG} from './ngx-mat-facet.config';\nimport {VCRefInjector} from './misc/parent.helper';\nimport {v4 as uuidv4} from 'uuid';\nimport {FacetModalService} from './modals/facet-modal.service';\nimport {chipAnimation} from './ngx-mat-facet-search.animations';\n\n// @dynamic\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-facet-search',\n  templateUrl: 'ngx-mat-facet-search.component.html',\n  styleUrls: ['./ngx-mat-facet-search.component.scss'],\n  animations: [\n    chipAnimation\n  ]\n})\nexport class NgxMatFacetSearchComponent implements OnInit, AfterViewInit {\n\n  private injectorRef: VCRefInjector;\n\n  constructor(@Inject(FACET_CONFIG) configuration: FacetConfig,\n              public modal: FacetModalService,\n              public media: MediaObserver,\n              private vcRef: ViewContainerRef) {\n\n    this.injectorRef = new VCRefInjector(this.vcRef.injector);\n    this.searchUpdated = new EventEmitter<Facet[]>();\n    this.reconfigure(configuration);\n\n    this.searchUpdated.subscribe(facets => {\n      this.loggingCallback('Facet(s) updated', facets);\n    });\n  }\n\n  @Input() set source(facets: Facet[]) {\n    this.sourceFacets = facets;\n\n    this.selectedFacets = this.selectedFacets.filter(s => facets.some(f => f.name === s.name));\n    this.availableFacets = facets.map(f => Object.assign({}, f)).filter(f => !this.selectedFacets.some(s => s.name === f.name));\n    this.filteredFacets = this.availableFacets;\n    this.emitSelectedEvent();\n  }\n\n  @Input() placeholder = 'Filter Table...';\n  @Input() clearButtonText = 'Clear Filters';\n  @Input() clearButtonEnabled = true;\n  @Input() dateFormat = 'M/d/yyyy';\n\n  @Input() tooltip: string | null = null;\n  @Input() displayFilterIcon = true;\n  @Input() facetWidth = '400px';\n  @Input() facetHasBackdrop = true;\n  @Input() confirmOnRemove = true;\n  @Input() chipLabelsEnabled = true;\n  @Input() identifier = null;\n\n  @Output() searchUpdated: EventEmitter<Facet[]>;\n\n  @ViewChild('filterInput') filterInput: ElementRef;\n  @ViewChild(MatAutocompleteTrigger, {read: MatAutocompleteTrigger}) inputAutoComplete: MatAutocompleteTrigger;\n\n  public selectedFacet: Facet;\n  public selectedFacets: Facet[] = [];\n  public availableFacets: Facet[] = [];\n  public filteredFacets: Facet[] = [];\n  public FacetDataType = FacetDataType;\n  public FacetFilterType = FacetFilterType;\n  public allowDebugClick = false;\n\n  private sourceFacets: Facet[] = [];\n  private timeoutHandler: any;\n  private identifierStrategy: FacetIdentifierStrategy;\n\n  private static getFixedURL(): string {\n    return window.location.pathname.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/\\//g, '-')\n      .replace(/^-/g, '')\n      .replace(/--/g, '-');\n  }\n\n  private loggingCallback: (...args) => void = () => {\n  };\n\n  ngOnInit() {\n    if (!this.identifier) {\n      this.generateIdentity();\n    }\n\n    this.updateAvailableFacets();\n    this.selectedFacets = this.loadFromSessionStorage();\n    this.updateSessionStorage();\n    this.sourceFacets.filter(facet => facet && facet.values && Array.isArray(facet.values))\n      .forEach(facet => this.selectedFacets.push(facet));\n  }\n\n  ngAfterViewInit() {\n    fromEvent(this.filterInput.nativeElement, 'keyup')\n      .pipe(\n        filter(Boolean),\n        debounceTime(150),\n        distinctUntilChanged(),\n        map(() => this.filterInput.nativeElement.value)\n      ).subscribe((filterText) => {\n      if (!!filterText && filterText.length > 0) {\n        this.filteredFacets = this.availableFacets.filter(f => f.name.toLowerCase().includes(filterText.toLowerCase()));\n      } else {\n        this.filteredFacets = this.availableFacets;\n      }\n    });\n  }\n\n  chipSelected(event: MatChipSelectionChange, facet: Facet): void {\n    if (event.selected && !facet.readonly) {\n      const elementRef = event.source._elementRef.nativeElement;\n      const bound = elementRef.parentElement.getBoundingClientRect();\n\n      let left = elementRef.offsetLeft - (bound.x + 4);\n\n      if (left < 0) {\n        left = elementRef.offsetLeft - 68;\n      }\n\n      this.facetSelected(facet, {\n        top: bound.height - 5,\n        left,\n      }, true, elementRef.parentElement);\n    }\n  }\n\n  autoCompleteSelected(event: MatAutocompleteSelectedEvent): void {\n    const selectedFacet: Facet = event.option.value;\n    const elementRef = event.option._getHostElement().parentElement.getBoundingClientRect();\n    const top = elementRef.top;\n    const left = elementRef.left;\n\n    this.facetSelected(selectedFacet, {\n      top,\n      left: (!this.media.isActive('xs') ? left : undefined)\n    }, false, event.option._getHostElement());\n\n  }\n\n  facetSelected(facet: Facet, position: { top: number, left: number | undefined }, isUpdate: boolean, target): void {\n    this.promptFacet(Object.assign({}, facet), position, isUpdate, target);\n  }\n\n  promptFacet(facet: Facet, position: { top: number, left: number | undefined }, isUpdate: boolean, target): void {\n    this.filteredFacets = this.availableFacets;\n\n\n    const facetDetailsModal = this.modal.open(FacetDetailsModalComponent, target, {\n      data: facet,\n      offsetY: position.top,\n      offsetX: Math.abs(position.left),\n      isUpdate\n    });\n\n\n    facetDetailsModal.beforeClosed().subscribe(() => {\n      this.selectedFacet = undefined;\n    });\n\n    facetDetailsModal.afterClosed().subscribe(result => {\n      if (result.type === FacetResultType.REMOVE) {\n        this.removeFacet(result.data);\n      } else if (result.type === FacetResultType.ADD) {\n        this.addOrUpdateFacet(result.data);\n      }\n    });\n  }\n\n  addOrUpdateFacet(facet: Facet): void {\n    const index = this.selectedFacets.findIndex(f => f.name === facet.name);\n    if (index > -1) {\n      this.selectedFacets[index] = facet;\n    } else {\n      this.selectedFacets.push(facet);\n    }\n    this.emitSelectedEvent();\n    this.updateSessionStorage();\n  }\n\n  removeFacet(facet: Facet): boolean {\n    if (!this.confirmOnRemove || (this.confirmOnRemove && confirm('Do you really want to remove \"' + facet.labelText + '\" filter?'))) {\n      this.selectedFacets = this.selectedFacets.filter(f => f.name !== facet.name);\n      this.emitSelectedEvent();\n      this.updateSessionStorage();\n      return true;\n    }\n    return false;\n  }\n\n  updateAvailableFacets(): void {\n    this.availableFacets = this.sourceFacets.map(f => Object.assign({}, f)).filter(f => !this.selectedFacets.some(s => s.name === f.name));\n\n    this.filteredFacets = this.availableFacets;\n    this.clearSessionStorage();\n  }\n\n  reset(): void {\n    this.selectedFacets = this.sourceFacets.filter(facet => facet.readonly === true);\n    this.emitSelectedEvent();\n    this.clearSessionStorage();\n  }\n\n  emitSelectedEvent(): void {\n    this.updateAvailableFacets();\n    this.searchUpdated.next(this.selectedFacets.map(facet => ({\n        name: facet.name,\n        labelText: facet.labelText,\n        type: facet.type,\n        values: facet.values.map(val => ({\n            value: val.value,\n            labelText: val.text,\n            type: val.type,\n            active: true\n          })\n        )\n      })\n      )\n    );\n  }\n\n  displayFn(...args: any): string | undefined {\n    return undefined;\n  }\n\n  focus(event) {\n    event.stopPropagation();\n    this.inputAutoComplete.openPanel();\n  }\n\n  /**\n   * Update the identity of this Facet Search Component\n   * This function does NOT reload/re-fetch previously saved facets from sessionStorage\n   *\n   * @param identifier - new identifier for the component\n   */\n  identify(identifier: string) {\n    this.loggingCallback(`Identifying facet with ID: ${identifier}`);\n    if (!!!identifier || identifier.length === 0 || identifier === '-') {\n      this.identifier = 'default-facet';\n    } else {\n      this.identifier = `${identifier}-facet`;\n    }\n  }\n\n  /**\n   * Returns the FacetIdentifierStrategy currently being used for identity generation\n   */\n  getIdentifierStrategy(): FacetIdentifierStrategy {\n    return this.identifierStrategy;\n  }\n\n  /**\n   * Clears previously saved facets for this specific component\n   */\n  clearSessionStorage() {\n    if (!this.identifier) {\n      return;\n    }\n\n    sessionStorage.removeItem(this.identifier);\n  }\n\n  /**\n   * Prints this component's identity to console\n   */\n  printIdentity() {\n    console.log(this.identifier);\n  }\n\n  /// DEBUG - Long Click Filter Icon\n  clickStarted() {\n    if (!this.allowDebugClick) {\n      return;\n    }\n\n    this.timeoutHandler = setTimeout(() => {\n      this.printIdentity();\n      this.timeoutHandler = null;\n    }, 1000);\n  }\n\n  clickEnded() {\n    if (this.timeoutHandler) {\n      clearTimeout(this.timeoutHandler);\n      this.timeoutHandler = null;\n    }\n  }\n\n  /**\n   * Reconfigure this Facet Search Component\n   * This function will reload the previously saved facets from sessionStorage if they exist\n   *\n   * @param configuration - Partial FacetConfig\n   * @param identity - Optional identity parameter if you want to override or provide a manual value\n   */\n  reconfigure(configuration: Partial<FacetConfig> | FacetConfig, identity?: string) {\n    if (configuration) {\n      if (configuration.hasOwnProperty('allowDebugClick')) {\n        this.allowDebugClick = configuration.allowDebugClick;\n      }\n\n      if (configuration.hasOwnProperty('identifierStrategy')) {\n        this.identifierStrategy = configuration.identifierStrategy;\n      }\n\n      if (configuration.hasOwnProperty('loggingCallback')) {\n        this.loggingCallback = configuration.loggingCallback;\n      }\n    }\n\n    const previousIdentity = `${this.identifier}`;\n    this.generateIdentity(identity);\n\n    if (previousIdentity !== this.identifier) {\n      this.loggingCallback('Loading facets from sessionStorage for', this.identifier);\n      this.selectedFacets = this.loadFromSessionStorage();\n    }\n\n    this.loggingCallback('Reconfigured', this.identifier);\n  }\n\n  /**\n   * Generates an identity for a Facet Search Component\n   * @param manual - manually set the identifier\n   * @private\n   */\n  private generateIdentity(manual?: string) {\n    let identity;\n\n    this.loggingCallback('Generating ID with strategy', this.identifierStrategy);\n\n    switch (this.identifierStrategy) {\n      case FacetIdentifierStrategy.WindowURL:\n        identity = NgxMatFacetSearchComponent.getFixedURL();\n        break;\n      case FacetIdentifierStrategy.ParentID:\n        identity = this.injectorRef.parentIdentifier;\n        break;\n      case FacetIdentifierStrategy.Random:\n        identity = uuidv4();\n        break;\n      default:\n        identity = manual;\n        break;\n    }\n\n    this.identify(identity);\n  }\n\n  /**\n   * Saves the selected facets to sessionStorage for our current identifier\n   * @private\n   */\n  private updateSessionStorage() {\n    if (!this.identifier) {\n      this.loggingCallback('Cannot update sessionStorage, no ID set');\n      return;\n    }\n\n    if (this.selectedFacets.length === 0) {\n      this.clearSessionStorage();\n      this.loggingCallback('Clearing sessionStorage for component with ID', this.identifier);\n      return;\n    }\n\n    this.loggingCallback('Saving facets in sessionStorage for component with ID', this.identifier);\n    sessionStorage.setItem(this.identifier, JSON.stringify(this.selectedFacets));\n  }\n\n  /**\n   * Loads facets from sessionStorage for our current identifier\n   * @private\n   */\n  private loadFromSessionStorage(): Facet[] {\n    let sessionFacets = [];\n\n    if (!!this.identifier && !!sessionStorage.getItem(this.identifier)) {\n      sessionFacets = JSON.parse(sessionStorage.getItem(this.identifier));\n      this.loggingCallback('Loaded facets for component with ID', this.identifier, sessionFacets);\n    } else if (!!!this.identifier) {\n      this.loggingCallback('No identifier set on this component');\n    } else if (!!!sessionStorage.getItem(this.identifier)) {\n      this.loggingCallback(\n        'No sessionStorage variable set for component with ID',\n        this.identifier,\n        sessionStorage.getItem(this.identifier)\n      );\n    }\n\n    setTimeout(() => {\n      this.emitSelectedEvent();\n    }, 500);\n\n    return sessionFacets;\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'csv',\n  pure: false\n})\nexport class CSVPipe implements PipeTransform {\n\n  transform(value: Array<object>, objectKeyName: string, separator: string): any {\n    return value.map(e => objectKeyName ? e[objectKeyName] : e).join(separator || ',');\n  }\n\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'filter',\n  pure: false\n})\nexport class FilterPipe implements PipeTransform {\n  transform(objectArray: Array<object>, fieldName: string, fieldValue: any): any {\n    return objectArray.filter(obj => obj[fieldName] === fieldValue);\n  }\n}\n","import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false\n})\nexport class KeysPipe implements PipeTransform {\n  transform(value): any {\n    return Object.keys(value).map(k => ({key: k, value: k}))\n  }\n}\n","import {Directive, ElementRef, Input, OnInit} from '@angular/core';\n\n@Directive({\n  selector: '[focusOnShow]'\n})\nexport class FocusOnShowDirective implements OnInit {\n\n  @Input('focusOnShow') timeout = 0;\n\n  @Input('firstElement') first = true;\n\n  constructor(private el: ElementRef) {\n    if (!el.nativeElement.focus) {\n      throw new Error('Element does not accept focus.');\n    }\n  }\n\n  ngOnInit(): void {\n    if (this.first) {\n      setTimeout(() => {\n        this.focusInput();\n      }, (this.timeout || 0));\n    }\n  }\n\n\n  private focusInput() {\n    const input = this.el.nativeElement as HTMLInputElement;\n\n    input.focus();\n\n\n    if (this.el.nativeElement.hasOwnProperty('select')) {\n      input.select();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxMatFacetSearchComponent} from './ngx-mat-facet-search.component';\nimport {FacetDetailsModalComponent} from './modals/facet-details-modal/facet-details-modal.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {CommonModule} from '@angular/common';\nimport {MatListModule} from '@angular/material/list';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {CSVPipe, FilterPipe, KeysPipe} from './pipes';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {FacetModalComponent} from './modals/facet-modal/facet-modal.component';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport { FocusOnShowDirective } from './directives/focus-on-show.directive';\n\n@NgModule({\n  imports: [\n    A11yModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatProgressBarModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatCheckboxModule,\n    MatInputModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatAutocompleteModule,\n    MatNativeDateModule,\n    MatProgressSpinnerModule,\n    OverlayModule,\n    PortalModule\n  ],\n  declarations: [\n    CSVPipe,\n    FilterPipe,\n    KeysPipe,\n    NgxMatFacetSearchComponent,\n    FacetDetailsModalComponent,\n    FacetModalComponent,\n    FocusOnShowDirective,\n  ],\n  exports: [NgxMatFacetSearchComponent],\n  entryComponents: [FacetDetailsModalComponent],\n})\nexport class NgxMatFacetSearchModule {\n}\n","/*\n * Public API Surface of ngx-mat-facet-search\n */\n\nexport * from './lib/ngx-mat-facet-search.component';\nexport * from './lib/ngx-mat-facet-search.module';\nexport * from './lib/models';\nexport * from './lib/ngx-mat-facet.config';\nexport * from './lib/modals/facet-modal.config';\nexport * from './lib/modals/facet-modal.data';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {FocusOnShowDirective as ɵl} from './lib/directives/focus-on-show.directive';\nexport {FacetDetailsModalComponent as ɵg} from './lib/modals/facet-details-modal/facet-details-modal.component';\nexport {FacetModalRef as ɵi} from './lib/modals/facet-modal.ref';\nexport {FacetModalService as ɵc} from './lib/modals/facet-modal.service';\nexport {facetModalAnimations as ɵk} from './lib/modals/facet-modal/facet-modal.animations';\nexport {FacetModalComponent as ɵj} from './lib/modals/facet-modal/facet-modal.component';\nexport {Facet as ɵh,FacetConfig as ɵb} from './lib/models';\nexport {chipAnimation as ɵa} from './lib/ngx-mat-facet-search.animations';\nexport {CSVPipe as ɵd,FilterPipe as ɵe,KeysPipe as ɵf} from './lib/pipes';","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageOneComponent\n  },\n  {\n    path: 'two',\n    component: PageTwoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {FACET_CONFIG, FacetConfig, FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport packageData from '../../../ngx-mat-facet-search/package.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: FACET_CONFIG, useFactory: () => {\n        return new FacetConfig({\n          loggingCallback: (...args) => {\n            console.log(...args);\n          },\n          identifierStrategy: FacetIdentifierStrategy.ParentID\n        });\n      }\n    }\n  ]\n})\nexport class AppComponent implements OnInit {\n\n  showPageOne = true;\n  showPageTwo = true;\n  version = packageData.version;\n  repo = packageData.repository;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const currentURL = event.url;\n        if (currentURL.includes('two')) {\n          this.showPageTwo = false;\n          this.showPageOne = true;\n          console.log('Page Two');\n        } else {\n          this.showPageOne = false;\n          this.showPageTwo = true;\n          console.log('Page One');\n        }\n      }\n    });\n  }\n}\n","<mat-toolbar>\n  <span>Angular Material Facet Search: v{{version}}</span>\n  <span class=\"spacer\"></span>\n  <a mat-button routerLink=\"\" [color]=\"showPageTwo ? 'primary' : ''\">\n    Page One\n  </a>\n  <a mat-button routerLink=\"/two\" [color]=\"showPageOne ? 'primary' : ''\">\n    Page Two\n  </a>\n  <span class=\"spacer\"></span>\n  <a [href]=\"repo\" target=\"_blank\" mat-stroked-button>View on GitHub</a>\n</mat-toolbar>\n\n<div fxLayout=\"column\" class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMatFacetSearchModule} from 'ngx-mat-facet-search';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {OutputComponent} from './components/output/output.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageOneComponent,\n    PageTwoComponent,\n    SettingsComponent,\n    OutputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxMatFacetSearchModule,\n    MatCardModule,\n    FlexModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatTooltipModule,\n    FormsModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {of} from 'rxjs';\nimport {FacetOption} from 'ngx-mat-facet-search';\nimport {delay, map, tap} from 'rxjs/operators';\n\nexport const testEmptyFilterTypeahead = (text: string) => {\n  return of([\n    {value: '-a', text: ' A'},\n    {value: '-b', text: ' B'},\n    {value: '-c', text: ' C'}\n  ] as FacetOption[]).pipe(\n    map(values => {\n      const filtered = values.filter(value => value.text.includes(text));\n\n      if (filtered.length === 0) {\n        return null;\n      }\n\n      return filtered;\n    }),\n    delay(300),\n  );\n};\n\nconst randomValueArray: FacetOption[] = [...new Set(Array.from({length: 40}, () => Math.floor(Math.random() * 40)).map(num => ({\n  value: `${num}`,\n  text: `${num}`\n})))];\n\nexport const lotsOfValuesTypeAhead = (text: string) => {\n  return of(randomValueArray).pipe(\n    map(values => {\n      const filtered = values.filter(value => {\n        if (text.length > 0) {\n          return value.text.includes(text);\n        }\n\n        return true;\n      });\n\n      if (filtered.length === 0) {\n        return null;\n      }\n\n      return filtered;\n    }),\n    delay(300),\n  );\n};\n\n","import { Component, OnInit } from '@angular/core';\nimport {Facet} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-output',\n  templateUrl: './output.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent implements OnInit {\n\n  public selectedFacets: Facet[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  filterUpdated(facetFilters: Facet[]): void {\n    this.selectedFacets = facetFilters;\n    console.log('filter', facetFilters);\n  }\n}\n","<mat-card fxFlex>\n  <mat-card-title>Output</mat-card-title>\n  <mat-card-content>\n    <pre>{{selectedFacets | json }}</pre>\n  </mat-card-content>\n</mat-card>\n","<mat-card fxFlex=\"1 1 auto\">\n  <mat-card-title>Settings</mat-card-title>\n  <mat-card-content fxLayout=\"column\">\n    <mat-checkbox [(ngModel)]=\"chipLabelsEnabled\">Chip labels</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"clearButtonEnabled\">\"Clear\" Button</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"confirmOnRemove\">Confirmation on remove</mat-checkbox>\n    <button mat-button (click)=\"toggleSet()\">Use {{isUsingSetB ? 'Set A' : 'Set B'}}</button>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>ID Generation Strategy</mat-label>\n      <mat-select [(value)]=\"currentStrategy\" (selectionChange)=\"strategyUpdated.emit($event.value)\">\n        <mat-option *ngFor=\"let strategy of allStrategies\" [value]=\"getRawStrategy(strategy)\">\n          {{displayStrategy(strategy)}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <pre matTooltip=\"Current Identifier\">{{currentIdentifier}}</pre>\n\n    <mat-form-field class=\"manual-input\" *ngIf=\"showManualInput|async\" appearance=\"outline\">\n      <mat-label>Manual Identifier</mat-label>\n      <input #manualInput matInput placeholder=\"cool-beans\" [(ngModel)]=\"manualIdentifier\"\n             (change)=\"manualIdentifierUpdated.next(manualInput.value)\">\n    </mat-form-field>\n\n  </mat-card-content>\n</mat-card>\n","import {AfterViewInit, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Facet, FacetDataType, FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport {BehaviorSubject, of} from 'rxjs';\nimport {delay, map} from 'rxjs/operators';\nimport {lotsOfValuesTypeAhead, testEmptyFilterTypeahead} from '../../common.helpers';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements AfterViewInit {\n\n  // Settings\n  public chipLabelsEnabled = true;\n  public clearButtonEnabled = true;\n  public confirmOnRemove = true;\n  public isUsingSetB = true;\n\n  @Output()\n  strategyUpdated = new EventEmitter<FacetIdentifierStrategy>(true);\n\n  @Output()\n  manualIdentifierUpdated = new EventEmitter<string>(true);\n\n  @Output()\n  facetsUpdated = new EventEmitter<Facet[]>(true);\n\n  @Input()\n  set strategy(value: any) {\n    this.currentStrategy = value;\n  }\n\n  @Input()\n  currentIdentifier = '';\n\n  public allStrategies = [];\n  public currentStrategy: FacetIdentifierStrategy;\n  public showManualInput = new BehaviorSubject(false);\n  public manualIdentifier = '';\n  public facets: Array<Facet> = [];\n\n  private allFacets = [\n    {\n      name: 'userName',\n      labelText: 'User Name',\n      type: FacetDataType.Text,\n      description: 'Please enter your user name (simple text input example)',\n      icon: 'person_outline'\n    }, {\n      name: 'birthday',\n      labelText: 'Birthday',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'eventDays',\n      labelText: 'Event Days',\n      icon: 'event_available',\n      description: 'Please select start and end dates (date range select example)',\n      type: FacetDataType.DateRange,\n    },\n    {\n      name: 'isParticipant',\n      labelText: 'Is a Participant?',\n      icon: 'live_help',\n      description: 'This is a test field, you can test boolean data type.',\n      type: FacetDataType.Boolean,\n    },\n    {\n      name: 'state',\n      labelText: 'State',\n      description: 'Please select something (single select, http example)',\n      type: FacetDataType.CategorySingle,\n      icon: 'folder_open',\n      /* mock http service call  */\n      options: of([\n        {value: 'open', text: 'Open', count: 49},\n        {value: 'closed', text: 'Closed', count: 23}\n      ]).pipe(delay(700))\n    },\n    {\n      name: 'license',\n      labelText: 'License(s)',\n      description: 'Please select your licenses (multi select, http example)',\n      type: FacetDataType.Category,\n      icon: 'drive_eta',\n      /* mock http service call  */\n      options: of([\n        {value: 'a', text: 'Class A'},\n        {value: 'b', text: 'Class B'},\n        {value: 'c', text: 'Class C'}\n      ]).pipe(delay(1200))\n    },\n    {\n      name: 'city',\n      labelText: 'Cities',\n      description: 'Please select from cities.',\n      type: FacetDataType.Typeahead,\n      icon: 'location_city',\n      typeahead: {\n        function: (txt) => {\n          return of([\n            {value: txt + '-a', text: txt + ' A'},\n            {value: txt + '-b', text: txt + ' B'},\n            {value: txt + '-c', text: txt + ' C'}\n          ]).pipe(delay(1200));\n        },\n      }\n    },\n    {\n      name: 'birthday',\n      labelText: 'Birthday 2',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'empty',\n      labelText: 'Empty Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'clear',\n      typeahead: {\n        function: testEmptyFilterTypeahead,\n        placeholder: 'Empty'\n      }\n    },\n    {\n      name: 'many',\n      labelText: 'Many Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'dns',\n      typeahead: {\n        function: lotsOfValuesTypeAhead,\n        placeholder: '1'\n      }\n    },\n  ];\n\n  constructor() {\n    this.allStrategies = Object.keys(FacetIdentifierStrategy);\n    this.strategyUpdated.pipe(\n      map(v => v.toLowerCase() === 'manual')\n    ).subscribe(this.showManualInput);\n  }\n\n  ngAfterViewInit() {\n    this.toggleSet();\n  }\n\n  chunkArray = (arr,n) => {\n    const chunkLength = Math.max(arr.length/n ,1);\n    const chunks = [];\n    for (let i = 0; i < n; i++) {\n      if(chunkLength*(i+1)<=arr.length)chunks.push(arr.slice(chunkLength*i, chunkLength*(i+1)));\n    }\n    return chunks;\n  }\n\n  getRawStrategy(strategy: FacetIdentifierStrategy) {\n    return FacetIdentifierStrategy[strategy];\n  }\n\n  displayStrategy(raw: string): string {\n    switch (raw) {\n      case 'WindowURL':\n        return 'Window URL';\n      case 'ParentID':\n        return 'Parent ID';\n      default:\n        return raw;\n    }\n  }\n\n  toggleSet() {\n    const chunked = this.chunkArray(this.allFacets, 2);\n\n    if (this.isUsingSetB) {\n      this.facets = chunked[0];\n      this.isUsingSetB = false;\n    } else {\n      this.facets = chunked[1];\n      this.isUsingSetB = true;\n    }\n\n    this.facetsUpdated.emit(this.facets);\n  }\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {Facet, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-page-one',\n  templateUrl: './page-one.component.html',\n  styleUrls: ['./page-one.component.scss']\n})\nexport class PageOneComponent {\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n\n  facetsUpdated(facets: Facet[]) {\n    this.facets = facets;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings (facetsUpdated)=\"facetsUpdated($event)\"  [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {Facet, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-page-two',\n  templateUrl: './page-two.component.html',\n  styleUrls: ['./page-two.component.scss']\n})\nexport class PageTwoComponent {\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n\n  facetsUpdated(facets: Facet[]) {\n    this.facets = facets;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings (facetsUpdated)=\"facetsUpdated($event)\" [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1854;\nmodule.exports = webpackEmptyAsyncContext;"]}