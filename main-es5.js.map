{"version":3,"sources":["webpack:///projects/demo-application/src/app/app-routing.module.ts","webpack:///projects/demo-application/src/app/app.component.ts","webpack:///projects/demo-application/src/app/app.component.html","webpack:///projects/demo-application/src/app/app.module.ts","webpack:///projects/demo-application/src/app/common.helpers.ts","webpack:///projects/demo-application/src/app/components/output/output.component.ts","webpack:///projects/demo-application/src/app/components/output/output.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.html","webpack:///projects/demo-application/src/app/components/settings/settings.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.ts","webpack:///projects/demo-application/src/app/pages/page-one/page-one.component.html","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.ts","webpack:///projects/demo-application/src/app/pages/page-two/page-two.component.html","webpack:///projects/demo-application/src/environments/environment.ts","webpack:///projects/demo-application/src/main.ts","webpack:///projects/demo-application/$_lazy_route_resources|lazy|groupOptions: {}|namespace object"],"names":["routes","path","component","PageOneComponent","PageTwoComponent","AppRoutingModule","RouterModule","AppComponent","router","showPageOne","showPageTwo","version","repo","events","subscribe","event","NavigationEnd","currentURL","url","includes","console","log","provide","FACET_CONFIG","useFactory","FacetConfig","loggingCallback","identifierStrategy","FacetIdentifierStrategy","AppModule","BrowserModule","BrowserAnimationsModule","NgxMatFacetSearchModule","MatCardModule","FlexModule","MatCheckboxModule","MatDividerModule","MatToolbarModule","MatButtonModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatTooltipModule","FormsModule","SettingsComponent","OutputComponent","testEmptyFilterTypeahead","text","of","value","pipe","map","values","filtered","filter","length","delay","randomValueArray","Set","Array","from","Math","floor","random","num","lotsOfValuesTypeAhead","selectedFacets","facetFilters","manualIdentifierUpdated","strategyUpdated","EventEmitter","facetsUpdated","currentIdentifier","chipLabelsEnabled","clearButtonEnabled","confirmOnRemove","isUsingSetB","allStrategies","showManualInput","BehaviorSubject","manualIdentifier","facets","allFacets","name","labelText","type","FacetDataType","description","icon","options","count","typeahead","txt","placeholder","chunkArray","arr","n","chunkLength","max","chunks","i","push","slice","Object","keys","v","toLowerCase","currentStrategy","toggleSet","raw","chunked","emit","newStrategy","facetSearch","reconfigure","identifier","NgxMatFacetSearchComponent","environment","production","enableProdMode","platformBrowser","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","id","module","exports"],"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","file":"main-es5.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PageOneComponent\n  },\n  {\n    path: 'two',\n    component: PageTwoComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","import {ChangeDetectionStrategy, Component, OnInit} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {FACET_CONFIG, FacetConfig, FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport packageData from '../../../ngx-mat-facet-search/package.json';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: FACET_CONFIG, useFactory: () => new FacetConfig({\n          loggingCallback: (...args) => {\n            console.log(...args);\n          },\n          identifierStrategy: FacetIdentifierStrategy.ParentID\n        })\n    }\n  ]\n})\nexport class AppComponent implements OnInit {\n\n  showPageOne = true;\n  showPageTwo = true;\n  version = packageData.version;\n  repo = packageData.repository;\n\n  constructor(private router: Router) {\n  }\n\n  ngOnInit() {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        const currentURL = event.url;\n        if (currentURL.includes('two')) {\n          this.showPageTwo = false;\n          this.showPageOne = true;\n          console.log('Page Two');\n        } else {\n          this.showPageOne = false;\n          this.showPageTwo = true;\n          console.log('Page One');\n        }\n      }\n    });\n  }\n}\n","<mat-toolbar>\n  <span>Angular Material Facet Search: v{{version}}</span>\n  <span class=\"spacer\"></span>\n  <a mat-button routerLink=\"\" [color]=\"showPageTwo ? 'primary' : ''\">\n    Page One\n  </a>\n  <a mat-button routerLink=\"/two\" [color]=\"showPageOne ? 'primary' : ''\">\n    Page Two\n  </a>\n  <span class=\"spacer\"></span>\n  <a [href]=\"repo\" target=\"_blank\" mat-stroked-button>View on GitHub</a>\n</mat-toolbar>\n\n<div fxLayout=\"column\" class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FormsModule} from '@angular/forms';\nimport {NgxMatFacetSearchModule} from 'ngx-mat-facet-search';\nimport {PageOneComponent} from './pages/page-one/page-one.component';\nimport {PageTwoComponent} from './pages/page-two/page-two.component';\nimport {SettingsComponent} from './components/settings/settings.component';\nimport {OutputComponent} from './components/output/output.component';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatTooltipModule} from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageOneComponent,\n    PageTwoComponent,\n    SettingsComponent,\n    OutputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgxMatFacetSearchModule,\n    MatCardModule,\n    FlexModule,\n    MatCheckboxModule,\n    MatDividerModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    MatInputModule,\n    MatTooltipModule,\n    FormsModule,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {of} from 'rxjs';\nimport {FacetOption} from 'ngx-mat-facet-search';\nimport {delay, map} from 'rxjs/operators';\n\nexport const testEmptyFilterTypeahead = (text: string) => of([\n    {value: '-a', text: ' A'},\n    {value: '-b', text: ' B'},\n    {value: '-c', text: ' C'}\n  ] as FacetOption[]).pipe(\n    map(values => {\n      const filtered = values.filter(value => !!value.text && value.text.includes(text));\n\n      if (filtered.length === 0) {\n        return null;\n      }\n\n      return filtered;\n    }),\n    delay(300),\n  );\n\nconst randomValueArray: FacetOption[] = [...new Set(Array.from({length: 40}, () => Math.floor(Math.random() * 40)).map(num => ({\n  value: `${num}`,\n  text: `${num}`\n})))];\n\nexport const lotsOfValuesTypeAhead = (text: string) => of(randomValueArray).pipe(\n    map(values => {\n      const filtered = values.filter(value => {\n        if (text.length > 0) {\n          return !!value.text && value.text.includes(text);\n        }\n\n        return true;\n      });\n\n      if (filtered.length === 0) {\n        return null;\n      }\n\n      return filtered;\n    }),\n    delay(300),\n  );\n\n","import { Component, OnInit } from '@angular/core';\nimport {Facet} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-output',\n  templateUrl: './output.component.html',\n  styleUrls: ['./output.component.scss']\n})\nexport class OutputComponent implements OnInit {\n\n  public selectedFacets: Facet[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  filterUpdated(facetFilters: Facet[]): void {\n    this.selectedFacets = facetFilters;\n    console.log('filter', facetFilters);\n  }\n}\n","<mat-card fxFlex>\n  <mat-card-title>Output</mat-card-title>\n  <mat-card-content>\n    <pre>{{selectedFacets | json }}</pre>\n  </mat-card-content>\n</mat-card>\n","<mat-card fxFlex=\"1 1 auto\">\n  <mat-card-title>Settings</mat-card-title>\n  <mat-card-content fxLayout=\"column\">\n    <mat-checkbox [(ngModel)]=\"chipLabelsEnabled\">Chip labels</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"clearButtonEnabled\">\"Clear\" Button</mat-checkbox>\n    <mat-checkbox [(ngModel)]=\"confirmOnRemove\">Confirmation on remove</mat-checkbox>\n    <button mat-button (click)=\"toggleSet()\">Use {{isUsingSetB ? 'Set A' : 'Set B'}}</button>\n    <mat-form-field appearance=\"outline\">\n      <mat-label>ID Generation Strategy</mat-label>\n      <mat-select [(value)]=\"currentStrategy\" (selectionChange)=\"strategyUpdated.emit($event.value)\">\n        <mat-option *ngFor=\"let strategy of allStrategies\" [value]=\"strategy\">\n          {{displayStrategy(strategy)}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n    <pre matTooltip=\"Current Identifier\">{{currentIdentifier}}</pre>\n\n    <mat-form-field class=\"manual-input\" *ngIf=\"showManualInput|async\" appearance=\"outline\">\n      <mat-label>Manual Identifier</mat-label>\n      <input #manualInput matInput placeholder=\"cool-beans\" [(ngModel)]=\"manualIdentifier\"\n             (change)=\"manualIdentifierUpdated.next(manualInput.value)\">\n    </mat-form-field>\n\n  </mat-card-content>\n</mat-card>\n","import {AfterViewInit, Component, EventEmitter, Input, Output} from '@angular/core';\nimport {Facet, FacetDataType, FacetIdentifierStrategy} from 'ngx-mat-facet-search';\nimport {BehaviorSubject, of} from 'rxjs';\nimport {delay, map} from 'rxjs/operators';\nimport {lotsOfValuesTypeAhead, testEmptyFilterTypeahead} from '../../common.helpers';\n\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements AfterViewInit {\n\n  @Output()\n  strategyUpdated = new EventEmitter<FacetIdentifierStrategy>(true);\n\n  @Output()\n  manualIdentifierUpdated = new EventEmitter<string>(true);\n\n  @Output()\n  facetsUpdated = new EventEmitter<Facet[]>(true);\n\n  @Input()\n  set strategy(value: any) {\n    this.currentStrategy = value;\n  }\n\n  @Input()\n  currentIdentifier: string | null = '';\n\n  // Settings\n  public chipLabelsEnabled = true;\n  public clearButtonEnabled = true;\n  public confirmOnRemove = true;\n  public isUsingSetB = true;\n\n  public allStrategies: string[] = [];\n  public currentStrategy: FacetIdentifierStrategy;\n  public showManualInput = new BehaviorSubject(false);\n  public manualIdentifier = '';\n  public facets: Array<Facet> = [];\n\n  private allFacets = [\n    {\n      name: 'userName',\n      labelText: 'User Name',\n      type: FacetDataType.Text,\n      description: 'Please enter your user name (simple text input example)',\n      icon: 'person_outline'\n    }, {\n      name: 'birthday',\n      labelText: 'Birthday',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'eventDays',\n      labelText: 'Event Days',\n      icon: 'event_available',\n      description: 'Please select start and end dates (date range select example)',\n      type: FacetDataType.DateRange,\n    },\n    {\n      name: 'isParticipant',\n      labelText: 'Is a Participant?',\n      icon: 'live_help',\n      description: 'This is a test field, you can test boolean data type.',\n      type: FacetDataType.Boolean,\n    },\n    {\n      name: 'state',\n      labelText: 'State',\n      description: 'Please select something (single select, http example)',\n      type: FacetDataType.CategorySingle,\n      icon: 'folder_open',\n      /* mock http service call  */\n      options: of([\n        {value: 'open', text: 'Open', count: 49},\n        {value: 'closed', text: 'Closed', count: 23}\n      ]).pipe(delay(700))\n    },\n    {\n      name: 'license',\n      labelText: 'License(s)',\n      description: 'Please select your licenses (multi select, http example)',\n      type: FacetDataType.Category,\n      icon: 'drive_eta',\n      /* mock http service call  */\n      options: of([\n        {value: 'a', text: 'Class A'},\n        {value: 'b', text: 'Class B'},\n        {value: 'c', text: 'Class C'}\n      ]).pipe(delay(1200))\n    },\n    {\n      name: 'city',\n      labelText: 'Cities',\n      description: 'Please select from cities.',\n      type: FacetDataType.Typeahead,\n      icon: 'location_city',\n      typeahead: {\n        function: (txt: string | null) => of([\n            {value: txt + '-a', text: txt + ' A'},\n            {value: txt + '-b', text: txt + ' B'},\n            {value: txt + '-c', text: txt + ' C'}\n          ]).pipe(delay(1200)),\n      }\n    },\n    {\n      name: 'birthday',\n      labelText: 'Birthday 2',\n      icon: 'date_range',\n      description: 'Please select your birthday (date select example)',\n      type: FacetDataType.Date,\n    },\n    {\n      name: 'empty',\n      labelText: 'Empty Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'clear',\n      typeahead: {\n        function: testEmptyFilterTypeahead,\n        placeholder: 'Empty'\n      }\n    },\n    {\n      name: 'many',\n      labelText: 'Many Test',\n      description: 'Please select from options.',\n      type: FacetDataType.Typeahead,\n      icon: 'dns',\n      typeahead: {\n        function: lotsOfValuesTypeAhead,\n        placeholder: '1'\n      }\n    },\n  ];\n\n  constructor() {\n    this.allStrategies = Object.keys(FacetIdentifierStrategy);\n    this.strategyUpdated.pipe(\n      map(v => v.toLowerCase() === 'manual')\n    ).subscribe(this.showManualInput);\n  }\n\n  ngAfterViewInit() {\n    this.toggleSet();\n  }\n\n  chunkArray = (arr: Array<any>, n: number) => {\n    const chunkLength = Math.max(arr.length/n ,1);\n    const chunks = [];\n    for (let i = 0; i < n; i++) {\n      if(chunkLength*(i+1)<=arr.length){chunks.push(arr.slice(chunkLength*i, chunkLength*(i+1)));}\n    }\n    return chunks;\n  };\n\n  displayStrategy(raw: string): string {\n    switch (raw) {\n      case 'WindowURL':\n        return 'Window URL';\n      case 'ParentID':\n        return 'Parent ID';\n      default:\n        return raw;\n    }\n  }\n\n  toggleSet() {\n    const chunked = this.chunkArray(this.allFacets, 2);\n\n    if (this.isUsingSetB) {\n      this.facets = chunked[0];\n      this.isUsingSetB = false;\n    } else {\n      this.facets = chunked[1];\n      this.isUsingSetB = true;\n    }\n\n    this.facetsUpdated.emit(this.facets);\n  }\n}\n","import {Component, ViewChild} from '@angular/core';\nimport {Facet, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-page-one',\n  templateUrl: './page-one.component.html',\n  styleUrls: ['./page-one.component.scss']\n})\nexport class PageOneComponent {\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n\n  facetsUpdated(facets: Facet[]) {\n    this.facets = facets;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings (facetsUpdated)=\"facetsUpdated($event)\"  [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","import {Component, ViewChild} from '@angular/core';\nimport {Facet, FacetIdentifierStrategy, NgxMatFacetSearchComponent} from 'ngx-mat-facet-search';\n\n@Component({\n  selector: 'app-page-two',\n  templateUrl: './page-two.component.html',\n  styleUrls: ['./page-two.component.scss']\n})\nexport class PageTwoComponent {\n\n  @ViewChild(NgxMatFacetSearchComponent)\n  facetSearch: NgxMatFacetSearchComponent;\n\n  facets: Array<Facet> = [];\n\n  strategyUpdated(newStrategy: FacetIdentifierStrategy) {\n    this.facetSearch.reconfigure({\n      identifierStrategy: newStrategy\n    });\n  }\n\n  manualIdentifierUpdated(identifier: string) {\n    this.facetSearch.reconfigure(null, identifier);\n  }\n\n  facetsUpdated(facets: Facet[]) {\n    this.facets = facets;\n  }\n}\n","<mat-card>\n  <mat-card-content>\n    <ngx-mat-facet-search #search [source]=\"facets\" (searchUpdated)=\"output.filterUpdated($event)\" [chipLabelsEnabled]=\"settings.chipLabelsEnabled\"\n                          [confirmOnRemove]=\"settings.confirmOnRemove\" [clearButtonEnabled]=\"settings.clearButtonEnabled\" placeholder=\"Add a filter...\" clearButtonText=\"CLEAR FILTERS\">\n    </ngx-mat-facet-search>\n\n  </mat-card-content>\n</mat-card>\n\n<mat-divider></mat-divider>\n\n<div fxLayout=\"row\" fxLayoutAlign=\"space-between start\" fxLayoutGap=\"15px\" class=\"content\">\n\n  <app-settings #settings (facetsUpdated)=\"facetsUpdated($event)\" [currentIdentifier]=\"search.identifier\" [strategy]=\"search.getIdentifierStrategy()\" (strategyUpdated)=\"strategyUpdated($event)\" (manualIdentifierUpdated)=\"manualIdentifierUpdated($event)\"></app-settings>\n  <mat-divider [vertical]=\"true\"></mat-divider>\n  <app-output #output></app-output>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 1854;\nmodule.exports = webpackEmptyAsyncContext;"]}